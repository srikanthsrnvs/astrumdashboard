{"version":3,"sources":["components/featureChips.js","components/targetSelector.js","components/parsingContainer.js","components/build.js","components/menu.js","login.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","App.js","serviceWorker.js","index.js"],"names":["chipStyle","marginTop","marginRight","sectionTitle","FeatureChips","props","state","features","deleteFeature","bind","feature","array","this","i","length","splice","setState","onSelection","chips","push","Chip","variant","style","key","label","color","onDelete","Component","TargetSelector","target","handleChange","e","value","classes","choices","MenuItem","className","selectionHeader","FormControl","formControl","InputLabel","ref","inputLabel","id","Select","labelId","onChange","labelWidth","withStyles","theme","margin","spacing","minWidth","selectEmpty","Alert","elevation","ParsingContainer","error","open","buildNetwork","validateFeatures","validateTarget","handleClose","success","includes","featuresValidated","targetValidated","xhr","XMLHttpRequest","setRequestHeader","send","JSON","stringify","addEventListener","status","parse","response","headers","root","sectionHeader","Button","startIcon","disableElevation","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","width","styles","makeStyles","dropboxButton","chip","Builder","useState","filename","setFilename","setFilelink","csvHeaders","setCSVHeaders","setFeatures","setTarget","user","targetSelected","console","log","featuresSelected","buildPressed","href","script","document","createElement","setAttribute","src","type","head","appendChild","options","file","name","link","getHeaders","cancel","linkType","multiselect","folderselect","extensions","onerror","onload","window","Dropbox","choose","onBuild","useStyles","display","appBar","marginLeft","zIndex","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","paddingTop","Menu","firebase","CssBaseline","AppBar","position","Drawer","paper","anchor","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","signOut","flexDirection","alignItems","avatar","secondary","main","form","submit","SignIn","email","setEmail","password","setPassword","history","useHistory","useEffect","auth","onAuthStateChanged","err","onSignIn","replace","Container","component","maxWidth","Avatar","Typography","onSubmit","preventDefault","signIn","then","authUser","catch","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Grid","container","item","xs","Link","FirebaseContext","React","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","createAccount","createUserWithEmailAndPassword","signInWithEmailAndPassword","app","initializeApp","THEME","createMuiTheme","typography","join","App","setUser","ThemeProvider","exact","path","Consumer","render","to","Boolean","location","hostname","match","ReactDOM","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"ybAGMA,EAAY,CACdC,UAAW,OACXC,YAAa,OAGXC,EAAe,CACjBF,UAAW,QAIMG,E,YAEjB,WAAYC,GAAO,IAAD,8BAEd,4CAAMA,KACDC,MAAQ,CACTC,SAAUF,EAAME,UAEpB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBANP,E,2EASJC,GAEV,IADA,IAAIC,EAAK,YAAOC,KAAKN,MAAMC,UAClBM,EAAE,EAAGA,EAAED,KAAKN,MAAMC,SAASO,OAAQD,IACpCD,KAAKN,MAAMC,SAASM,KAAOH,IAC3BC,EAAMI,OAAOF,EAAG,GAChBD,KAAKI,SAAS,CAACT,SAAUI,IACzBC,KAAKP,MAAMY,YAAYN,M,+BAO/B,IADA,IAAIO,EAAQ,GACHL,EAAE,EAAGA,EAAED,KAAKN,MAAMC,SAASO,OAAQD,IACxCK,EAAMC,KAAK,kBAACC,EAAA,EAAD,CAAMC,QAAQ,WAAWC,MAAOtB,EAAWuB,IAAKV,EAAGW,MAAOZ,KAAKN,MAAMC,SAASM,GAAIY,MAAM,UAAUC,SAAUd,KAAKJ,cAAcC,KAAKG,KAAMA,KAAKN,MAAMC,SAASM,OAE7K,OACI,6BACI,wBAAIS,MAAOnB,GAAX,qBACCe,O,GA9ByBS,a,2CCQpCC,E,YAEF,WAAYvB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTuB,OAASxB,EAAMwB,OACftB,SAAWF,EAAME,UAErB,EAAKuB,aAAe,EAAKA,aAAarB,KAAlB,gBANN,E,0EASLsB,GACTnB,KAAKI,SAAS,CAACa,OAAQE,EAAEF,OAAOG,QAChCpB,KAAKP,MAAMY,YAAYc,EAAEF,OAAOG,S,+BAQhC,IAJA,IACOC,EAAWrB,KAAKP,MAAhB4B,QAEHC,EAAU,GACNrB,EAAE,EAAGA,EAAED,KAAKN,MAAMC,SAASO,OAAQD,IAAI,CAC3C,IAAIH,EAAUE,KAAKN,MAAMC,SAASM,GAClCqB,EAAQf,KAAK,kBAACgB,EAAA,EAAD,CAAUZ,IAAKV,EAAGmB,MAAOtB,GAAUA,IAEpD,OACI,6BACI,wBAAI0B,UAAWH,EAAQI,iBAAvB,qBACA,kBAACC,EAAA,EAAD,CAAajB,QAAQ,WAAWe,UAAWH,EAAQM,aAC/C,kBAACC,EAAA,EAAD,CAAYC,IAAK7B,KAAK8B,WAAYC,GAAG,uCACrC,kBAACC,EAAA,EAAD,CACIC,QAAQ,oCACRF,GAAG,8BACHX,MAAOpB,KAAKN,MAAMuB,OAClBiB,SAAUlC,KAAKkB,aACfiB,WAlBG,GAoBFb,S,GArCIP,aA6CdqB,eA3DA,SAAAC,GAAK,MAAK,CACrBV,YAAa,CACXW,OAAQD,EAAME,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXpD,UAAWgD,EAAME,QAAQ,IAE3Bd,gBAAiB,CACbpC,UAAW,WAkDJ+C,CAAmBpB,G,mCC1DlC,SAAS0B,EAAMjD,GACX,OAAO,kBAAC,IAAD,eAAUkD,UAAW,EAAGlC,QAAQ,UAAahB,IAGxD,IAaMmD,E,YAEF,WAAYnD,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTuB,OAAQxB,EAAMwB,OACdtB,SAAUF,EAAME,SAChBkD,MAAO,GACPC,MAAM,GAEV,EAAKC,aAAe,EAAKA,aAAalD,KAAlB,gBACpB,EAAKmD,iBAAmB,EAAKA,iBAAiBnD,KAAtB,gBACxB,EAAKoD,eAAiB,EAAKA,eAAepD,KAApB,gBACtB,EAAKqD,YAAc,EAAKA,YAAYrD,KAAjB,gBAXL,E,2EAedG,KAAKI,SAAS,CAAC0C,MAAK,EAAOD,MAAO,O,uCAIlC,MAAyB,KAAtB7C,KAAKN,MAAMuB,OACH,CAACkC,SAAS,EAAMN,MAAO,IAEvB,CAACM,SAAS,EAAON,MAAO,sC,yCAKnC,OAAG7C,KAAKN,MAAMC,SAASO,QAAU,EAC1BF,KAAKN,MAAMC,SAASyD,SAASpD,KAAKN,MAAMuB,QAChC,CAACkC,SAAS,EAAON,MAAO,2CAExB,CAACM,SAAS,EAAMN,MAAO,IAG3B,CAACM,SAAS,EAAON,MAAO,oE,qCAKnC,IAAIQ,EAAoBrD,KAAKgD,mBACzBM,EAAkBtD,KAAKiD,iBAE3B,GAAII,EAAkBF,QAEhB,GAAKG,EAAgBH,QAEtB,CACDnD,KAAKI,SAAS,CAAC0C,MAAM,EAAOD,MAAO,KACnC,IAAIU,EAAM,IAAIC,eACdD,EAAIT,KAAK,OAAQ,yCACjBS,EAAIE,iBAAiB,eAAgB,oBACrCF,EAAIG,KAAKC,KAAKC,UAAU,CACpB,SAAY5D,KAAKN,MAAMC,SACvB,OAAUK,KAAKN,MAAMuB,UAEzBsC,EAAIM,iBAAiB,QAAQ,WACzB,GAAmB,MAAfN,EAAIO,OACUH,KAAKI,MAAMR,EAAIS,UAAUC,gBAZ/CjE,KAAKI,SAAS,CAACyC,MAAOS,EAAgBT,MAAOC,MAAM,SAFnD9C,KAAKI,SAAS,CAAC0C,MAAM,EAAMD,MAAOQ,EAAkBR,U,+BAqBnD,IACExB,EAAWrB,KAAKP,MAAhB4B,QACP,OACI,yBAAKG,UAAWH,EAAQ6C,MACpB,wBAAI1C,UAAWH,EAAQ8C,eAAvB,SACA,6BACA,kBAACC,EAAA,EAAD,CAAQC,UAAW,kBAAC,IAAD,MAAc5D,QAAQ,YAAYI,MAAM,UAAUyD,kBAAgB,EAACC,QAASvE,KAAK+C,cAApG,wBACA,kBAACyB,EAAA,EAAD,CAAUC,aAAc,CAACC,SAAU,SAAUC,WAAW,SAAUC,iBAAkB,IAAM9B,KAAM9C,KAAKN,MAAMoD,KAAM+B,QAAS7E,KAAKkD,aAC3H,kBAAC,EAAD,CAAO4B,SAAS,SAAS9E,KAAKN,MAAMmD,a,GA1EzB9B,aAiFhBqB,eA9FA,SAACC,GAAD,MAAY,CACvB8B,cAAe,CACX9E,UAAW,QAEf6E,KAAM,CACFa,MAAO,OACP,YAAa,CACT1F,UAAWgD,EAAME,QAAQ,QAuFtBH,CAAmBQ,GChG5BoC,EAASC,aAAW,SAAA5C,GAAK,MAAK,CAChC6C,cAAc,CACV7F,UAAW,QAEf8F,KAAM,CACF9F,UAAW,YAIJ,SAAS+F,EAAQ3F,GAE5B,IAAM4B,EAAU2D,IAFkB,EAGFK,mBAAS,oBAHP,mBAG3BC,EAH2B,KAGjBC,EAHiB,OAIFF,mBAAS,IAJP,mBAIjBG,GAJiB,aAKEH,mBAAS,IALX,mBAK3BI,EAL2B,KAKfC,EALe,OAMFL,mBAAS,IANP,mBAM3B1F,EAN2B,KAMjBgG,EANiB,OAONN,mBAAS,IAPH,mBAO3BpE,EAP2B,KAOnB2E,EAPmB,KAQrBnG,EAAMoG,KAgEnB,SAASC,EAAe7E,GACpB2E,EAAU3E,GACV8E,QAAQC,IAAI/E,GAGhB,SAASgF,EAAiBtG,GACtBgG,EAAYhG,GACZoG,QAAQC,IAAIrG,GAGhB,SAASuG,EAAalC,GAClB+B,QAAQC,IAAIhC,GAsBhB,OACI,6BACI,iDACA,0EAA+C,uBAAGmC,KAAK,wBAAR,cAA/C,sFACA,6BACA,6BACI,kBAAC/B,EAAA,EAAD,CAAQC,UAAW,kBAAC,IAAD,MAAgB5D,QAAQ,WAAWI,MAAM,UAAU0D,QA/ElF,WAEI,IAAI6B,EAASC,SAASC,cAAc,UACpCF,EAAOG,aAAa,eAAgB,mBACpCH,EAAOI,IAAM,kDACbJ,EAAOrE,GAAK,YACZqE,EAAOK,KAAO,kBACdJ,SAASK,KAAKC,YAAYP,GAE1BL,QAAQC,IAAI,WACZ,IAAIY,EAAU,CAGVzD,QAAS,SAAS0D,GACd,IAAIvB,EAAWuB,EAAK,GAAGC,KACvBtB,EAAYqB,EAAK,GAAGE,MACpBxB,EAAYD,GA9BxB,SAAoByB,GAChB,IAAIxD,EAAM,IAAIC,eACdD,EAAIT,KAAK,OAAQ,kCACjBS,EAAIE,iBAAiB,eAAgB,oBACrCF,EAAIG,KAAKC,KAAKC,UAAU,CAAC,KAAQmD,KACjCxD,EAAIM,iBAAiB,QAAQ,WACzB,GAAmB,MAAfN,EAAIO,OAAe,CACnB,IAAIG,EAAUN,KAAKI,MAAMR,EAAIS,UAAUC,QACvCyB,EAAczB,GACd0B,EAAY1B,OAsBZ+C,CAAWH,EAAK,GAAGE,OAEvBE,OAAQ,aAGRC,SAAU,SACVC,aAAa,EACbC,cAAc,EACdC,WAAY,CAAC,SAEjBjB,EAAOkB,QAAU,WACbvB,QAAQC,IAAI,QAEhBI,EAAOmB,OAAS,WACZC,OAAOC,QAAQC,OAAOd,IAEtBY,OAAOC,UACP1B,QAAQC,IAAI,yBACZwB,OAAOC,QAAQC,OAAOd,KA4C+EpF,UAAWH,EAAQ6D,eAApH,sBACA,6BACA,kBAAC1E,EAAA,EAAD,CAAMgB,UAAWH,EAAQ8D,KAAMvE,MAAO0E,EAAUxE,SAvG5D,WACIyE,EAAY,oBACZC,EAAY,IACZE,EAAc,IACdC,EAAY,IACZC,EAAU,KAkG4E/E,MAAM,YACpF,6BACA,mBA7BU,WAClB,OAAG4E,EAAWvF,OAAS,EAEf,6BACI,kBAAC,EAAD,CAAcP,SAAUA,EAAUU,YAAa4F,IAC/C,6BACA,kBAAC,EAAD,CAAgBhF,OAAQA,EAAQtB,SAAU8F,EAAYpF,YAAayF,IACnE,6BACA,kBAAC,EAAD,CAAkB7E,OAAQA,EAAQtB,SAAUA,EAAUgI,QAASzB,KAKnE,OAgBA,QCvHhB,IAEM0B,EAAY3C,aAAW,SAAA5C,GAAK,MAAK,CACrC6B,KAAM,CACJ2D,QAAS,QAEXC,OAAQ,CACN/C,MAAM,eAAD,OAPW,IAOX,OACLgD,WARgB,IAShBC,OAAQ3F,EAAM2F,OAAOC,OAAQ,GAE/BA,OAAQ,CACNlD,MAZgB,IAahBmD,WAAY,GAEdC,YAAa,CACXpD,MAhBgB,KAkBlBqD,QAAS/F,EAAMgG,OAAOD,QACtBE,QAAS,CACPC,SAAU,EACVC,gBAAiBnG,EAAMoG,QAAQC,WAAWC,QAC1CC,QAASvG,EAAME,QAAQ,GACvBsG,WAAY,YAID,SAASC,GAAKrJ,GAC3B,IAAM4B,EAAUuG,IACV/B,EAAOpG,EAAMoG,KACbkD,EAAWtJ,EAAMsJ,SAMvB,OAEE,yBAAKvH,UAAWH,EAAQ6C,MACtB,kBAAC8E,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQ1H,UAAWH,EAAQyG,SAE5C,kBAACqB,EAAA,EAAD,CACE3H,UAAWH,EAAQ4G,OACnBxH,QAAQ,YACRY,QAAS,CACP+H,MAAO/H,EAAQ8G,aAEjBkB,OAAO,QAEP,yBAAK7H,UAAWH,EAAQ+G,UACxB,kBAACkB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAAC9I,IAAK,OACpB,kBAAC+I,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACJ,EAAA,EAAD,CAAUC,QAAM,EAAC9I,IAAK,QACpB,kBAAC+I,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,gBAExB,kBAACJ,EAAA,EAAD,CAAUC,QAAM,EAAC9I,IAAK,YACpB,kBAAC+I,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACJ,EAAA,EAAD,CAAUC,QAAM,EAAClF,QAjCzB,WACEwE,EAASc,WAgCgClJ,IAAK,WACtC,kBAAC+I,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,eAI5B,0BAAMpI,UAAWH,EAAQiH,SACvB,kBAAClD,EAAD,CAASS,KAAMA,M,mICvEjB+B,GAAY3C,aAAW,SAAA5C,GAAK,MAAK,CACrC+G,MAAO,CACL/J,UAAWgD,EAAME,QAAQ,GACzBsF,QAAS,OACTiC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACN1H,OAAQD,EAAME,QAAQ,GACtBiG,gBAAiBnG,EAAMoG,QAAQwB,UAAUC,MAE3CC,KAAM,CACJpF,MAAO,OACP1F,UAAWgD,EAAME,QAAQ,IAE3B6H,OAAQ,CACN9H,OAAQD,EAAME,QAAQ,EAAG,EAAG,QAIjB,SAAS8H,GAAO5K,GAC3B,IAAM4B,EAAUuG,KADkB,EAERvC,mBAAS,IAFD,mBAE3BiF,EAF2B,KAEpBC,EAFoB,OAGFlF,mBAAS,IAHP,mBAG3BmF,EAH2B,KAGjBC,EAHiB,KAI5BC,EAAUC,eA6BhB,OAdAC,qBAAU,WACNnL,EAAMsJ,SAAS8B,KACdC,oBAAmB,SAACjF,EAAMkF,GACpBlF,GACCpG,EAAMuL,SAASnF,GACf6E,EAAQnK,KAAK,gBAEbwF,QAAQC,IAAIH,EAAMkF,GAClBtL,EAAMuL,SAAS,IACfN,EAAQO,QAAQ,WAGzB,IAGC,kBAACC,GAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACrC,kBAACpC,EAAA,EAAD,MACA,yBAAKxH,UAAWH,EAAQ+H,OACpB,kBAACiC,GAAA,EAAD,CAAQ7J,UAAWH,EAAQ2I,QAC3B,kBAAC,KAAD,OAEA,kBAACsB,GAAA,EAAD,CAAYH,UAAU,KAAK1K,QAAQ,MAAnC,WAGA,0BAAM8K,SArCd,SAAgBpK,GACZA,EAAEqK,iBACFzF,QAAQC,IAAIsE,EAAOE,EAAU/K,EAAMsJ,UACnCtJ,EAAMsJ,SACL0C,OAAOnB,EAAOE,GACdkB,MAAK,SAAAC,GACF5F,QAAQC,IAAI2F,MAEfC,OAAM,SAAA/I,GACHkD,QAAQC,IAAInD,OA4BYrB,UAAWH,EAAQ8I,KAAM0B,YAAU,GAC3D,kBAACC,GAAA,EAAD,CACIrL,QAAQ,WACR6B,OAAO,SACPyJ,UAAQ,EACRC,WAAS,EACTjK,GAAG,QACHnB,MAAM,gBACNkG,KAAK,QACLmF,aAAa,QACbC,WAAS,EACThK,SAAU,SAAAf,GAAC,OAAIoJ,EAASpJ,EAAEF,OAAOG,UAErC,kBAAC0K,GAAA,EAAD,CACIrL,QAAQ,WACR6B,OAAO,SACPyJ,UAAQ,EACRC,WAAS,EACTlF,KAAK,WACLlG,MAAM,WACN6F,KAAK,WACL1E,GAAG,WACHkK,aAAa,mBACb/J,SAAU,SAAAf,GAAC,OAAIsJ,EAAYtJ,EAAEF,OAAOG,UAExC,kBAAC+K,GAAA,EAAD,CACIC,QAAS,kBAACC,GAAA,EAAD,CAAUjL,MAAM,WAAWP,MAAM,YAC1CD,MAAM,gBAEV,kBAACwD,EAAA,EAAD,CACIqC,KAAK,SACLuF,WAAS,EACTvL,QAAQ,YACRI,MAAM,UACNW,UAAWH,EAAQ+I,QALvB,WASA,kBAACkC,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACb,kBAACC,GAAA,EAAD,CAAMvG,KAAK,IAAI1F,QAAQ,SAAvB,qBAIA,kBAAC6L,GAAA,EAAD,CAAME,MAAI,GACV,kBAACE,GAAA,EAAD,CAAMvG,KAAK,IAAI1F,QAAQ,SAClB,uCC5HrB,IACekM,GADSC,IAAMC,cAAc,M,oBCEtCC,I,OAAiB,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCTJC,GDcX,aAAc,IAAD,gCAKbC,cAAgB,SAAClD,EAAOE,GACpB,OAAO,EAAKK,KAAK4C,+BAA+BnD,EAAOE,IAN9C,KASbiB,OAAS,SAACnB,EAAOE,GACb,OAAO,EAAKK,KAAK6C,2BAA2BpD,EAAOE,IAV1C,KAabX,QAAU,WACN,OAAO,EAAKgB,KAAKhB,WAbjB8D,KAAIC,cAAcd,IAClB9M,KAAK6K,KAAO8C,KAAI9C,Q,SERlBgD,GAAQC,aAAe,CAC3BC,WAAY,CACV,WAAc,CACZ,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,SAAY,GACZ,gBAAmB,IACnB,kBAAqB,IACrB,iBAAoB,OAuCTC,OAnCf,WAAgB,IAAD,EAEW5I,mBAAS,IAFpB,mBAENQ,EAFM,KAEAqI,EAFA,KAIb,SAASlD,EAAS7J,GAChB+M,EAAQ/M,GAGV,OACE,kBAACgN,GAAA,EAAD,CAAe9L,MAAOwL,IACpB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOO,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAgBC,SAAjB,MACG,SAAAvF,GAAQ,OAAI,kBAACsB,GAAD,CAAQW,SAAUA,EAAUjC,SAAUA,QAGvD,kBAAC,KAAD,CAAOsF,KAAK,aAAaE,OAAQ,WAC/B,OAAK1I,EAID,kBAAC,GAAgByI,SAAjB,MACG,SAAAvF,GAAQ,OAAI,kBAACD,GAAD,CAAMjD,KAAMA,EAAMkD,SAAUA,OAJrC,kBAAC,KAAD,CAAUyF,GAAG,aCtCfC,QACW,cAA7BjH,OAAOkH,SAASC,UAEe,UAA7BnH,OAAOkH,SAASC,UAEhBnH,OAAOkH,SAASC,SAASC,MACvB,2DCXNC,IAASN,OACL,kBAAC,GAAgBO,SAAjB,CAA0B1N,MAAO,IAAImM,IACjC,kBAAC,GAAD,OAEJlH,SAAS0I,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxD,MAAK,SAAAyD,GACJA,EAAaC,gBAEdxD,OAAM,SAAA/I,GACLkD,QAAQlD,MAAMA,EAAMwM,a","file":"static/js/main.e836ab6f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Chip from '@material-ui/core/Chip'\n\nconst chipStyle = {\n    marginTop: '10px',\n    marginRight: '5px'\n}\n\nconst sectionTitle = {\n    marginTop: '40px'\n}\n\n\nexport default class FeatureChips extends Component{\n\n    constructor(props){\n        \n        super(props);\n        this.state = {\n            features: props.features\n        }\n        this.deleteFeature = this.deleteFeature.bind(this);\n    }\n\n    deleteFeature(feature){\n        var array = [...this.state.features]; // make a separate copy of the array\n        for (var i=0; i<this.state.features.length; i++){\n            if (this.state.features[i] === feature){\n                array.splice(i, 1)\n                this.setState({features: array})\n                this.props.onSelection(array)\n            }\n        }\n    }\n\n    render() {\n        var chips = []\n        for (var i=0; i<this.state.features.length; i++){\n            chips.push(<Chip variant='outlined' style={chipStyle} key={i} label={this.state.features[i]} color='primary' onDelete={this.deleteFeature.bind(this, this.state.features[i])}></Chip>)\n        }\n        return(\n            <div>\n                <h3 style={sectionTitle}>Selected features</h3>\n                {chips}\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    selectionHeader: {\n        marginTop: '40px'\n    }\n});\n\n\nclass TargetSelector extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            target : props.target,\n            features : props.features\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(e){\n        this.setState({target: e.target.value})\n        this.props.onSelection(e.target.value)\n    }\n\n    render(){\n        const labelWidth = 0\n        const {classes} = this.props;\n\n        var choices = []\n        for(var i=0; i<this.state.features.length; i++){\n            var feature = this.state.features[i]\n            choices.push(<MenuItem key={i} value={feature}>{feature}</MenuItem>)\n        }\n        return(\n            <div>\n                <h3 className={classes.selectionHeader}>Select the target</h3>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel ref={this.inputLabel} id=\"demo-simple -select-outlined-label\" />\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.target}\n                        onChange={this.handleChange}\n                        labelWidth={labelWidth}\n                    >\n                        {choices}\n                    </Select>\n                </FormControl>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(TargetSelector)","import React, {Component} from 'react'\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles'\nimport BuildIcon from '@material-ui/icons/Build'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport Snackbar from '@material-ui/core/Snackbar'\n\n\nfunction Alert(props){\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = (theme) => ({\n    sectionHeader: {\n        marginTop: '40px'\n    },\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    }\n});\n\n\nclass ParsingContainer extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            target: props.target,\n            features: props.features,\n            error: \"\",\n            open: false\n        }\n        this.buildNetwork = this.buildNetwork.bind(this)\n        this.validateFeatures = this.validateFeatures.bind(this)\n        this.validateTarget = this.validateTarget.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    handleClose(){\n        this.setState({open:false, error: \"\"})\n    }\n\n    validateTarget(){\n        if(this.state.target !== ''){\n            return {success: true, error: ''}\n        }else{\n            return {success: false, error: 'There must be a target selected.'}\n        }\n    }\n\n    validateFeatures(){\n        if(this.state.features.length >= 1){\n            if(this.state.features.includes(this.state.target)){\n                return {success: false, error: \"Prediction targets cannot be a feature.\"}\n            }else{\n                return {success: true, error: \"\"}\n            }\n        }else{\n            return {success: false, error: \"There must be at least one feature to predict the target from.\"}\n        }\n    }\n\n    buildNetwork(){\n        var featuresValidated = this.validateFeatures()\n        var targetValidated = this.validateTarget()\n\n        if(!featuresValidated.success){\n            this.setState({open: true, error: featuresValidated.error})\n        }else if (!targetValidated.success){\n            this.setState({error: targetValidated.error, open: true})\n        }else{\n            this.setState({open: false, error: \"\"})\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST', 'http://127.0.0.1:8080/datasets/params')\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.send(JSON.stringify({\n                \"features\": this.state.features,\n                \"target\": this.state.target \n            }))\n            xhr.addEventListener('load', () => {\n                if (xhr.status === 200){\n                    var headers = JSON.parse(xhr.response).headers\n                    //TODO\n                }\n            })\n        }\n    }\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <div className={classes.root}>\n                <h3 className={classes.sectionHeader}>Train</h3>\n                <br></br>\n                <Button startIcon={<BuildIcon/>} variant='contained' color='primary' disableElevation onClick={this.buildNetwork}>Build neural network</Button>\n                <Snackbar anchorOrigin={{vertical: 'bottom', horizontal:'right'}} autoHideDuration={6000} open={this.state.open} onClose={this.handleClose}>\n                    <Alert severity='error'>{this.state.error}</Alert>\n                </Snackbar>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(ParsingContainer)","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload'\nimport Chip from '@material-ui/core/Chip'\nimport FeatureChips from './featureChips'\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer'\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton:{\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    }\n  }));\n\nexport default function Builder(props){\n\n    const classes = styles();\n    const [filename, setFilename] = useState(\"No file selected\");\n    const [filelink, setFilelink] = useState(\"\");\n    const [csvHeaders, setCSVHeaders] = useState([])\n    const [features, setFeatures] = useState([])\n    const [target, setTarget] = useState(\"\")\n    const user = props.user\n\n    function deleteSelectedFile(){\n        setFilename(\"No file selected\")\n        setFilelink(\"\")\n        setCSVHeaders([])\n        setFeatures([])\n        setTarget(\"\")\n    }\n\n    function getHeaders(link){\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST', 'http://127.0.0.1:8080/datasets')\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(JSON.stringify({\"link\": link}))\n        xhr.addEventListener('load', () => {\n            if (xhr.status === 200){\n                var headers = JSON.parse(xhr.response).headers\n                setCSVHeaders(headers)\n                setFeatures(headers)\n            }\n        })\n    }\n\n    function connectToDropbox(){\n\n        var script = document.createElement('script')\n        script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh')\n        script.src = \"https://www.dropbox.com/static/api/2/dropins.js\"\n        script.id = \"dropboxjs\"\n        script.type = \"text/javascript\"\n        document.head.appendChild(script);\n\n        console.log(\"clicked\")\n        var options = {\n\n            // Required. Called when a user selects an item in the Chooser.\n            success: function(file) {\n                var filename = file[0].name\n                setFilelink(file[0].link)\n                setFilename(filename)\n                getHeaders(file[0].link)\n            },\n            cancel: function() {\n        \n            },\n            linkType: \"direct\", // or \"direct\"\n            multiselect: false, // or true\n            folderselect: false, // or true\n            extensions: ['.csv']\n        };\n        script.onerror = function(){\n            console.log(\"Err\")\n        }\n        script.onload = function(){\n            window.Dropbox.choose(options)\n        }\n        if (window.Dropbox){\n            console.log(\"Trying to open picker\")\n            window.Dropbox.choose(options)\n        }\n        \n    }\n\n    function targetSelected(target){\n        setTarget(target)\n        console.log(target)\n    }\n\n    function featuresSelected(features){\n        setFeatures(features)\n        console.log(features)\n    }\n\n    function buildPressed(response){\n        console.log(response)\n    }\n\n    const ShowFeatures = (function(){\n        if(csvHeaders.length > 0){\n            return(\n                <div>\n                    <FeatureChips features={features} onSelection={featuresSelected}/>\n                    <br></br>\n                    <TargetSelector target={target} features={csvHeaders} onSelection={targetSelected}/>\n                    <br></br>\n                    <ParsingContainer target={target} features={features} onBuild={buildPressed}></ParsingContainer>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    })\n\n\n    return (\n        <div>\n            <h1>Let's get started</h1>\n            <span>First, you'll need to prepare a dataset. <a href=\"http://www.astrum.ai\">Click here</a> to check out how your data needs to be prepared before being uploaded to Dropbox.</span>\n            <br></br>\n            <div>\n                <Button startIcon={<CloudUpload/>} variant='outlined' color='primary' onClick={connectToDropbox} className={classes.dropboxButton}>Connect to dropbox</Button>\n                <br></br>\n                <Chip className={classes.chip} label={filename} onDelete={deleteSelectedFile} color=\"primary\" />\n                <br></br>\n                <ShowFeatures />\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport List from '@material-ui/core/List';\nimport ListIcon from '@material-ui/icons/List'\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Builder from './build'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    zIndex: theme.zIndex.drawer +1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    paddingTop: '10px'\n  },\n}));\n\nexport default function Menu(props) {\n  const classes = useStyles();\n  const user = props.user;\n  const firebase = props.firebase;\n\n  function signOut(){\n    firebase.signOut()\n  }\n\n  return (\n\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          <ListItem button key={\"new\"}>\n            <ListItemIcon><AddIcon /></ListItemIcon>\n            <ListItemText primary='New model' />\n          </ListItem>\n          <ListItem button key={'list'}>\n            <ListItemIcon><ListIcon /></ListItemIcon>\n            <ListItemText primary='All models' />\n          </ListItem>\n          <ListItem button key={'settings'}>\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n          <ListItem button onClick={signOut} key={'signout'}>\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\n            <ListItemText primary=\"Log out\" />\n          </ListItem>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <Builder user={user}/>\n      </main>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const history = useHistory()\n    \n    function signIn(e){\n        e.preventDefault()\n        console.log(email, password, props.firebase)\n        props.firebase\n        .signIn(email, password)\n        .then(authUser => {\n            console.log(authUser)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    useEffect(() => {\n        props.firebase.auth\n        .onAuthStateChanged((user, err) => {\n            if(user){\n                props.onSignIn(user)\n                history.push('/dashboard')\n            }else{\n                console.log(user, err)\n                props.onSignIn(\"\")\n                history.replace('/')\n            }\n        })\n    }, [])\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n            </Typography>\n            <form onSubmit={signIn} className={classes.form} noValidate>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange={e => setEmail(e.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={e => setPassword(e.target.value)}\n            />\n            <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n                Sign In\n            </Button>\n            <Grid container>\n                <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                </Link>\n                </Grid>\n                <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                </Link>\n                </Grid>\n            </Grid>\n            </form>\n        </div>\n        </Container>\n    );\n}","import React from 'react';\nconst FirebaseContext = React.createContext(null);\nexport default FirebaseContext;","import app from 'firebase/app'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAI6jdiSr92SVzXL0AwGKgdl9vf1n6O3xE\",\n    authDomain: \"astrumdashboard.firebaseapp.com\",\n    databaseURL: \"https://astrumdashboard.firebaseio.com\",\n    projectId: \"astrumdashboard\",\n    storageBucket: \"astrumdashboard.appspot.com\",\n    messagingSenderId: \"454472899112\",\n    appId: \"1:454472899112:web:4682681794e9e7de5c331d\",\n    measurementId: \"G-KS2TFQMTZJ\"\n};\n\nclass Firebase{\n\n    constructor(){\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth()\n    }\n\n    createAccount = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    signIn = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    }\n\n    signOut = () => {\n        return this.auth.signOut()\n    }\n}\n\nexport default Firebase;","import FirebaseContext from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext };","import React from 'react';\nimport './App.css';\nimport Menu from './components/menu';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport SignIn from './login'\nimport {FirebaseContext} from './components/Firebase'\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport { useState } from 'react';\n\n\nconst THEME = createMuiTheme({\n  typography: {\n    \"fontFamily\": [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  }\n});\n\nfunction App() {\n\n  const [user, setUser] = useState(\"\")\n\n  function onSignIn(e){\n    setUser(e)\n  }\n\n  return (\n    <ThemeProvider theme={THEME}>\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <FirebaseContext.Consumer>\n              {firebase => <SignIn onSignIn={onSignIn} firebase={firebase}/>}\n            </FirebaseContext.Consumer>\n          </Route>\n          <Route path=\"/dashboard\" render={() => {\n            if (!user){\n              return (<Redirect to=\"/\" />)\n            }else{\n              return(\n                <FirebaseContext.Consumer>\n                  {firebase => <Menu user={user} firebase={firebase}/>}\n                </FirebaseContext.Consumer>\n              )\n            }\n          }}>\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/Firebase'\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}