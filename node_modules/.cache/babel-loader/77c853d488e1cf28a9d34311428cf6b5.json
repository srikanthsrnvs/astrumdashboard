{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport { v4 as uuidv4 } from 'uuid';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAI6jdiSr92SVzXL0AwGKgdl9vf1n6O3xE\",\n  authDomain: \"astrumdashboard.firebaseapp.com\",\n  databaseURL: \"https://astrumdashboard.firebaseio.com\",\n  projectId: \"astrumdashboard\",\n  storageBucket: \"astrumdashboard.appspot.com\",\n  messagingSenderId: \"454472899112\",\n  appId: \"1:454472899112:web:4682681794e9e7de5c331d\",\n  measurementId: \"G-KS2TFQMTZJ\"\n};\n\nclass Firebase {\n  constructor() {\n    this.createAccount = (email, password) => {\n      return this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    this.signIn = (email, password) => {\n      return this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    this.signOut = () => {\n      return this.auth.signOut();\n    };\n\n    this.setListenerOnUserData = user => {\n      return this.db.ref(`/`);\n    };\n\n    this.get_user_data = (user, callback) => {\n      this.db.ref(`/users/${user.uid}`).on('value', function (snapshot) {\n        console.log(\"Retrieved user information\");\n        callback(snapshot);\n      });\n    };\n\n    this.upload_file = function (file, user) {\n      const metadata = {\n        class_name: file.name.split('.').slice(0, -1).join('.'),\n        uploaded_by: user.uid,\n        uploaded_at: Math.floor(new Date() / 1000)\n      };\n      return this.storage.ref(`datasets`).child(uuidv4()).put(file, metadata);\n    };\n\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/Firebase/firebase.js"],"names":["app","v4","uuidv4","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","createAccount","email","password","auth","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","setListenerOnUserData","user","db","ref","get_user_data","callback","uid","on","snapshot","console","log","upload_file","file","metadata","class_name","name","split","slice","join","uploaded_by","uploaded_at","Math","floor","Date","storage","child","put","initializeApp","database"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,kBAAP;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,iCAFO;AAGnBC,EAAAA,WAAW,EAAE,wCAHM;AAInBC,EAAAA,SAAS,EAAE,iBAJQ;AAKnBC,EAAAA,aAAa,EAAE,6BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;;AAWA,MAAMC,QAAN,CAAc;AAEVC,EAAAA,WAAW,GAAE;AAAA,SAObC,aAPa,GAOG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjC,aAAO,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAAP;AACH,KATY;;AAAA,SAWbG,MAXa,GAWJ,CAACJ,KAAD,EAAQC,QAAR,KAAqB;AAC1B,aAAO,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAAP;AACH,KAbY;;AAAA,SAebK,OAfa,GAeH,MAAM;AACZ,aAAO,KAAKJ,IAAL,CAAUI,OAAV,EAAP;AACH,KAjBY;;AAAA,SAmBbC,qBAnBa,GAmBYC,IAAD,IAAU;AAC9B,aAAO,KAAKC,EAAL,CAAQC,GAAR,CAAa,GAAb,CAAP;AACH,KArBY;;AAAA,SAuBbC,aAvBa,GAuBG,CAACH,IAAD,EAAOI,QAAP,KAAoB;AAChC,WAAKH,EAAL,CAAQC,GAAR,CAAa,UAASF,IAAI,CAACK,GAAI,EAA/B,EAAkCC,EAAlC,CAAqC,OAArC,EAA8C,UAASC,QAAT,EAAkB;AAC5DC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAL,QAAAA,QAAQ,CAACG,QAAD,CAAR;AACH,OAHD;AAIH,KA5BY;;AAAA,SA8BbG,WA9Ba,GA8BC,UAASC,IAAT,EAAeX,IAAf,EAAoB;AAC9B,YAAMY,QAAQ,GAAG;AAACC,QAAAA,UAAU,EAAEF,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,EAAkCC,IAAlC,CAAuC,GAAvC,CAAb;AAA0DC,QAAAA,WAAW,EAAElB,IAAI,CAACK,GAA5E;AAAiFc,QAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,KAAW,IAAtB;AAA9F,OAAjB;AACA,aAAO,KAAKC,OAAL,CAAarB,GAAb,CAAkB,UAAlB,EAA6BsB,KAA7B,CAAmC7C,MAAM,EAAzC,EAA6C8C,GAA7C,CAAiDd,IAAjD,EAAuDC,QAAvD,CAAP;AACH,KAjCY;;AACTnC,IAAAA,GAAG,CAACiD,aAAJ,CAAkB9C,cAAlB;AACA,SAAKc,IAAL,GAAYjB,GAAG,CAACiB,IAAJ,EAAZ;AACA,SAAKO,EAAL,GAAUxB,GAAG,CAACkD,QAAJ,EAAV;AACA,SAAKJ,OAAL,GAAe9C,GAAG,CAAC8C,OAAJ,EAAf;AACH;;AAPS;;AAsCd,eAAelC,QAAf","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAI6jdiSr92SVzXL0AwGKgdl9vf1n6O3xE\",\n    authDomain: \"astrumdashboard.firebaseapp.com\",\n    databaseURL: \"https://astrumdashboard.firebaseio.com\",\n    projectId: \"astrumdashboard\",\n    storageBucket: \"astrumdashboard.appspot.com\",\n    messagingSenderId: \"454472899112\",\n    appId: \"1:454472899112:web:4682681794e9e7de5c331d\",\n    measurementId: \"G-KS2TFQMTZJ\"\n};\n\nclass Firebase{\n\n    constructor(){\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth()\n        this.db = app.database()\n        this.storage = app.storage()\n    }\n\n    createAccount = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    signIn = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    }\n\n    signOut = () => {\n        return this.auth.signOut()\n    }\n\n    setListenerOnUserData = (user) => {\n        return this.db.ref(`/`)\n    }\n\n    get_user_data = (user, callback) => {\n        this.db.ref(`/users/${user.uid}`).on('value', function(snapshot){\n            console.log(\"Retrieved user information\")\n            callback(snapshot)\n        })\n    }\n\n    upload_file = function(file, user){\n        const metadata = {class_name: file.name.split('.').slice(0, -1).join('.'), uploaded_by: user.uid, uploaded_at: Math.floor(new Date()/1000)}\n        return this.storage.ref(`datasets`).child(uuidv4()).put(file, metadata)\n    }\n}\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}