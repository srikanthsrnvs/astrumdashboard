{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/build.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  }\n}));\nexport default function Builder() {\n  const classes = styles();\n\n  function connectToDropbox() {\n    // Dropbox.data-app-key = \"z5p9y3pr6ufqsbh\";\n    var script = document.createElement('script');\n    script.src = \"https://www.dropbox.com/static/api/2/dropins.js?data-app-key='z5p9y3pr6ufqsbh'\";\n    script.id = \"dropboxjs\";\n    script.type = \"text/javascript\";\n    document.head.appendChild(script);\n    var options = {\n      // Required. Called when a user selects an item in the Chooser.\n      success: function (files) {\n        alert(\"Here's the file link: \" + files[0].link);\n      },\n      // Optional. Called when the user closes the dialog without selecting a file\n      // and does not include any parameters.\n      cancel: function () {},\n      // Optional. \"preview\" (default) is a preview link to the document for sharing,\n      // \"direct\" is an expiring link to download the contents of the file. For more\n      // information about link types, see Link types below.\n      linkType: \"preview\",\n      // or \"direct\"\n      // Optional. A value of false (default) limits selection to a single file, while\n      // true enables multiple file selection.\n      multiselect: false,\n      // or true\n      // Optional. This is a list of file extensions. If specified, the user will\n      // only be able to select files with these extensions. You may also specify\n      // file types, such as \"video\" or \"images\" in the list. For more information,\n      // see File types below. By default, all extensions are allowed.\n      extensions: ['.pdf', '.doc', '.docx'],\n      // Optional. A value of false (default) limits selection to files,\n      // while true allows the user to select both folders and files.\n      // You cannot specify `linkType: \"direct\"` when using `folderselect: true`.\n      folderselect: false,\n      // or true\n      // Optional. A limit on the size of each file that may be selected, in bytes.\n      // If specified, the user will only be able to select files with size\n      // less than or equal to this limit.\n      // For the purposes of this option, folders have size zero.\n      sizeLimit: 1024 // or any positive number\n\n    };\n    window.Dropbox.choose(options);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Let's get started\"), React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Let's get started by uploading a dataset. Upload your data to Dropbox if you haven't already, and continue by logging in.\"), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: connectToDropbox(),\n    className: classes.dropboxButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Connect to dropbox\")));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/build.js"],"names":["React","makeStyles","Button","styles","theme","dropboxButton","marginTop","Builder","classes","connectToDropbox","script","document","createElement","src","id","type","head","appendChild","options","success","files","alert","link","cancel","linkType","multiselect","extensions","folderselect","sizeLimit","window","Dropbox","choose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,MAAMC,MAAM,GAAGF,UAAU,CAACG,KAAK,KAAK;AAChCC,EAAAA,aAAa,EAAC;AACVC,IAAAA,SAAS,EAAE;AADD;AADkB,CAAL,CAAN,CAAzB;AAMA,eAAe,SAASC,OAAT,GAAkB;AAE7B,QAAMC,OAAO,GAAGL,MAAM,EAAtB;;AAEA,WAASM,gBAAT,GAA2B;AACvB;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAa,gFAAb;AACAH,IAAAA,MAAM,CAACI,EAAP,GAAY,WAAZ;AACAJ,IAAAA,MAAM,CAACK,IAAP,GAAc,iBAAd;AACAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AAGA,QAAIQ,OAAO,GAAG;AAEV;AACAC,MAAAA,OAAO,EAAE,UAASC,KAAT,EAAgB;AACrBC,QAAAA,KAAK,CAAC,2BAA2BD,KAAK,CAAC,CAAD,CAAL,CAASE,IAArC,CAAL;AACH,OALS;AAOV;AACA;AACAC,MAAAA,MAAM,EAAE,YAAW,CAElB,CAXS;AAaV;AACA;AACA;AACAC,MAAAA,QAAQ,EAAE,SAhBA;AAgBW;AAErB;AACA;AACAC,MAAAA,WAAW,EAAE,KApBH;AAoBU;AAEpB;AACA;AACA;AACA;AACAC,MAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,CA1BF;AA4BV;AACA;AACA;AACAC,MAAAA,YAAY,EAAE,KA/BJ;AA+BW;AAErB;AACA;AACA;AACA;AACAC,MAAAA,SAAS,EAAE,IArCD,CAqCO;;AArCP,KAAd;AAwCAC,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBb,OAAtB;AACH;;AAGD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAET,gBAAgB,EAApE;AAAwE,IAAA,SAAS,EAAED,OAAO,CAACH,aAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CAFJ,CADJ;AASH","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton:{\n        marginTop: '20px'\n    }\n  }));\n\nexport default function Builder(){\n\n    const classes = styles();\n\n    function connectToDropbox(){\n        // Dropbox.data-app-key = \"z5p9y3pr6ufqsbh\";\n        var script = document.createElement('script')\n        script.src = \"https://www.dropbox.com/static/api/2/dropins.js?data-app-key='z5p9y3pr6ufqsbh'\"\n        script.id = \"dropboxjs\"\n        script.type = \"text/javascript\"\n        document.head.appendChild(script);\n\n\n        var options = {\n\n            // Required. Called when a user selects an item in the Chooser.\n            success: function(files) {\n                alert(\"Here's the file link: \" + files[0].link)\n            },\n        \n            // Optional. Called when the user closes the dialog without selecting a file\n            // and does not include any parameters.\n            cancel: function() {\n        \n            },\n        \n            // Optional. \"preview\" (default) is a preview link to the document for sharing,\n            // \"direct\" is an expiring link to download the contents of the file. For more\n            // information about link types, see Link types below.\n            linkType: \"preview\", // or \"direct\"\n        \n            // Optional. A value of false (default) limits selection to a single file, while\n            // true enables multiple file selection.\n            multiselect: false, // or true\n        \n            // Optional. This is a list of file extensions. If specified, the user will\n            // only be able to select files with these extensions. You may also specify\n            // file types, such as \"video\" or \"images\" in the list. For more information,\n            // see File types below. By default, all extensions are allowed.\n            extensions: ['.pdf', '.doc', '.docx'],\n        \n            // Optional. A value of false (default) limits selection to files,\n            // while true allows the user to select both folders and files.\n            // You cannot specify `linkType: \"direct\"` when using `folderselect: true`.\n            folderselect: false, // or true\n        \n            // Optional. A limit on the size of each file that may be selected, in bytes.\n            // If specified, the user will only be able to select files with size\n            // less than or equal to this limit.\n            // For the purposes of this option, folders have size zero.\n            sizeLimit: 1024, // or any positive number\n        };\n\n        window.Dropbox.choose(options);\n    }\n\n\n    return (\n        <div>\n            <h1>Let's get started</h1>\n            <ol>\n                <li>Let's get started by uploading a dataset. Upload your data to Dropbox if you haven't already, and continue by logging in.</li>\n                <Button variant='outlined' color='primary' onClick={connectToDropbox()} className={classes.dropboxButton}>Connect to dropbox</Button>\n            </ol>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}