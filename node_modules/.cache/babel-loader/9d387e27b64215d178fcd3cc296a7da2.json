{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/drawer.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport BuildIcon from '@material-ui/icons/Build';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Builder from './build';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    paddingTop: '10px'\n  }\n}));\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, ['Build', 'Settings'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(BuildIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : React.createElement(SettingsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, Builder()));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/drawer.js"],"names":["React","makeStyles","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","ListItem","ListItemIcon","ListItemText","BuildIcon","SettingsIcon","Builder","drawerWidth","useStyles","theme","root","display","appBar","width","marginLeft","zIndex","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","paddingTop","PermanentDrawerLeft","classes","paper","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport BuildIcon from '@material-ui/icons/Build';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Builder from './build'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    zIndex: theme.zIndex.drawer +1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    paddingTop: '10px'\n  },\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['Build', 'Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <BuildIcon /> : <SettingsIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        {Builder()}\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}