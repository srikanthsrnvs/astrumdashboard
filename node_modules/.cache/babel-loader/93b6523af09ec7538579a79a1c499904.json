{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/build.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  }\n}));\nexport default function Builder() {\n  const classes = styles();\n\n  function connectToDropbox() {\n    var script = document.createElement('script');\n    script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh');\n    script.src = \"https://www.dropbox.com/static/api/2/dropins.js\";\n    script.id = \"dropboxjs\";\n    script.type = \"text/javascript\";\n    document.head.appendChild(script);\n    console.log(\"clicked\");\n    var options = {\n      // Required. Called when a user selects an item in the Chooser.\n      success: function (file) {\n        var filename = file.className;\n        var fileSize = file.bytes / 1024 * 1024;\n        var text_box = document.getElementById('filename');\n\n        if (text_box) {\n          text_box.value = filename;\n          text_box.style.display = \"\";\n        }\n      },\n      cancel: function () {},\n      linkType: \"direct\",\n      // or \"direct\"\n      multiselect: false,\n      // or true\n      folderselect: false // or true\n\n    };\n\n    script.onerror = function () {\n      console.log(\"Err\");\n    };\n\n    script.onload = function () {\n      window.Dropbox.choose(options);\n    };\n\n    if (window.Dropbox) {\n      console.log(\"Trying to open picker\");\n      window.Dropbox.choose(options);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Let's get started\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"First, you'll need to prepare a dataset. \", React.createElement(\"a\", {\n    href: \"http://www.astrum.ai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Click here\"), \" to check out how your data needs to be prepared before being uploaded to Dropbox.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    startIcon: React.createElement(CloudUpload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: connectToDropbox,\n    className: classes.dropboxButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Connect to dropbox\"), React.createElement(\"span\", {\n    id: \"filename\",\n    style: {\n      display: none\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/build.js"],"names":["React","makeStyles","Button","CloudUpload","styles","theme","dropboxButton","marginTop","Builder","classes","connectToDropbox","script","document","createElement","setAttribute","src","id","type","head","appendChild","console","log","options","success","file","filename","className","fileSize","bytes","text_box","getElementById","value","style","display","cancel","linkType","multiselect","folderselect","onerror","onload","window","Dropbox","choose","none"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload'\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton:{\n        marginTop: '20px'\n    }\n  }));\n\nexport default function Builder(){\n\n    const classes = styles();\n\n    function connectToDropbox(){\n\n        var script = document.createElement('script')\n        script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh')\n        script.src = \"https://www.dropbox.com/static/api/2/dropins.js\"\n        script.id = \"dropboxjs\"\n        script.type = \"text/javascript\"\n        document.head.appendChild(script);\n\n        console.log(\"clicked\")\n        var options = {\n\n            // Required. Called when a user selects an item in the Chooser.\n            success: function(file) {\n                var filename = file.className\n                var fileSize = file.bytes/1024*1024\n                var text_box = document.getElementById('filename')\n\n                if (text_box){\n                    text_box.value = filename\n                    text_box.style.display = \"\"\n                }\n                \n            },\n            cancel: function() {\n        \n            },\n            linkType: \"direct\", // or \"direct\"\n            multiselect: false, // or true\n            folderselect: false, // or true\n        };\n        script.onerror = function(){\n            console.log(\"Err\")\n        }\n        script.onload = function(){\n            window.Dropbox.choose(options)\n        }\n        if (window.Dropbox){\n            console.log(\"Trying to open picker\")\n            window.Dropbox.choose(options)\n        }\n        \n    }\n\n\n    return (\n        <div>\n            <h1>Let's get started</h1>\n            <span>First, you'll need to prepare a dataset. <a href=\"http://www.astrum.ai\">Click here</a> to check out how your data needs to be prepared before being uploaded to Dropbox.</span>\n            <br></br>\n            <Button startIcon={<CloudUpload/>} variant='outlined' color='primary' onClick={connectToDropbox} className={classes.dropboxButton}>Connect to dropbox</Button>\n            <span id='filename' style={{display:none}}></span>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}