{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/src/components/project.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport ImageUploader from 'react-images-upload';\nimport { Button } from '@material-ui/core';\nexport default function Project(props) {\n  const match = useRouteMatch();\n  const data = props.data[match.params.id];\n  const [image, setImage] = useState(null);\n\n  function onDrop(image, url) {\n    setImage();\n  }\n\n  function performPrediction() {}\n\n  const ShowPredictor = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: performPrediction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Predict\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, console.log(\"CAME IN CHILD\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, data.name), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Predict\"), React.createElement(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Upload Image\",\n    onChange: onDrop,\n    imgExtension: ['.jpg', '.jpeg', '.png'],\n    singleImage: true,\n    withPreview: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(ShowPredictor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/src/components/project.js"],"names":["React","useEffect","useState","useRef","useRouteMatch","ImageUploader","Button","Project","props","match","data","params","id","image","setImage","onDrop","url","performPrediction","ShowPredictor","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAElC,QAAMC,KAAK,GAAGL,aAAa,EAA3B;AACA,QAAMM,IAAI,GAAGF,KAAK,CAACE,IAAN,CAAWD,KAAK,CAACE,MAAN,CAAaC,EAAxB,CAAb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASa,MAAT,CAAgBF,KAAhB,EAAuBG,GAAvB,EAA2B;AACvBF,IAAAA,QAAQ;AACX;;AAED,WAASG,iBAAT,GAA4B,CAE3B;;AAED,QAAMC,aAAa,GAAG,MAAM;AACxB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAED,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAKH,GAND;;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,CAACC,GAAR,CAAY,eAAZ,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAI,CAACW,IAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII,oBAAC,aAAD;AACI,IAAA,QAAQ,EAAE,IADd;AAEI,IAAA,UAAU,EAAC,cAFf;AAGI,IAAA,QAAQ,EAAEN,MAHd;AAII,IAAA,YAAY,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAJlB;AAKI,IAAA,WAAW,EAAE,IALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAYI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAgBH","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport {useRouteMatch} from 'react-router-dom'\nimport ImageUploader from 'react-images-upload'\nimport {Button} from '@material-ui/core'\n\nexport default function Project(props){\n\n    const match = useRouteMatch()\n    const data = props.data[match.params.id]\n    const [image, setImage] = useState(null)\n\n    function onDrop(image, url){\n        setImage()\n    }\n\n    function performPrediction(){\n\n    }\n\n    const ShowPredictor = () => {\n        return (\n            <div>\n                <Button variant='contained' color='primary' onClick={performPrediction}>Predict</Button>\n            </div>\n        )\n    }\n\n\n    return (\n        <div>\n            {console.log(\"CAME IN CHILD\")}\n            <h2>{data.name}</h2>\n            <h5>Predict</h5>\n            <ImageUploader \n                withIcon={true}\n                buttonText='Upload Image'\n                onChange={onDrop}\n                imgExtension={['.jpg', '.jpeg', '.png']}\n                singleImage={true}\n                withPreview={true}\n            />\n            <ShowPredictor />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}