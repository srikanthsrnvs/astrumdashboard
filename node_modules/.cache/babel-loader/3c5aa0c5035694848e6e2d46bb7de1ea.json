{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/parsingContainer.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport BuildIcon from '@material-ui/icons/Build';\nimport Alert from '@material-ui/core/Snackbar';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst styles = () => ({\n  sectionHeader: {\n    marginTop: '40px'\n  }\n});\n\nclass ParsingContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target: props.target,\n      features: props.features,\n      error: \"\",\n      open: false\n    };\n    this.buildNetwork = this.buildNetwork.bind(this);\n    this.validateFeatures = this.validateFeatures.bind(this);\n    this.validateTarget = this.validateTarget.bind(this);\n  }\n\n  validateTarget() {\n    if (this.state.target != '') {\n      return {\n        success: true,\n        error: ''\n      };\n    } else {\n      console.log(\"ISSUE\");\n      return {\n        success: false,\n        error: 'There must be a target selected.'\n      };\n    }\n  }\n\n  validateFeatures() {\n    if (this.state.features.length >= 1) {\n      if (this.state.features.includes(this.state.target)) {\n        return {\n          success: false,\n          error: \"Prediction targets cannot be a feature.\"\n        };\n      } else {\n        return {\n          success: true,\n          error: \"\"\n        };\n      }\n    } else {\n      return {\n        success: false,\n        error: \"There must be at least one feature to predict the target from.\"\n      };\n    }\n  }\n\n  buildNetwork() {\n    var featuresValidated = this.validateFeatures();\n    var targetValidated = this.validateTarget();\n\n    if (!featuresValidated.success) {\n      this.setState({\n        open: true,\n        error: featuresValidated.message\n      });\n    } else if (!targetValidated.success) {\n      this.setState({\n        open: true,\n        error: targetValidated.message\n      });\n    } else {\n      //TODO\n      this.setState({\n        open: false,\n        error: \"\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes.sectionHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Train\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Button, {\n      startIcon: React.createElement(BuildIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      onClick: this.buildNetwork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Build neural network\"), React.createElement(Snackbar, {\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.error)));\n  }\n\n}\n\nexport default withStyles(styles)(ParsingContainer);","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/parsingContainer.js"],"names":["React","Component","Button","withStyles","BuildIcon","Alert","Snackbar","styles","sectionHeader","marginTop","ParsingContainer","constructor","props","state","target","features","error","open","buildNetwork","bind","validateFeatures","validateTarget","success","console","log","length","includes","featuresValidated","targetValidated","setState","message","render","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAIA,MAAMC,MAAM,GAAG,OAAO;AAClBC,EAAAA,aAAa,EAAE;AACXC,IAAAA,SAAS,EAAE;AADA;AADG,CAAP,CAAf;;AAOA,MAAMC,gBAAN,SAA+BT,SAA/B,CAAwC;AAEpCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADL;AAETC,MAAAA,QAAQ,EAAEH,KAAK,CAACG,QAFP;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDE,EAAAA,cAAc,GAAE;AACZ,QAAG,KAAKR,KAAL,CAAWC,MAAX,IAAqB,EAAxB,EAA2B;AACvB,aAAO;AAACQ,QAAAA,OAAO,EAAE,IAAV;AAAgBN,QAAAA,KAAK,EAAE;AAAvB,OAAP;AACH,KAFD,MAEK;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAO;AAACF,QAAAA,OAAO,EAAE,KAAV;AAAiBN,QAAAA,KAAK,EAAE;AAAxB,OAAP;AACH;AACJ;;AAEDI,EAAAA,gBAAgB,GAAE;AACd,QAAG,KAAKP,KAAL,CAAWE,QAAX,CAAoBU,MAApB,IAA8B,CAAjC,EAAmC;AAC/B,UAAG,KAAKZ,KAAL,CAAWE,QAAX,CAAoBW,QAApB,CAA6B,KAAKb,KAAL,CAAWC,MAAxC,CAAH,EAAmD;AAC/C,eAAO;AAACQ,UAAAA,OAAO,EAAE,KAAV;AAAiBN,UAAAA,KAAK,EAAE;AAAxB,SAAP;AACH,OAFD,MAEK;AACD,eAAO;AAACM,UAAAA,OAAO,EAAE,IAAV;AAAgBN,UAAAA,KAAK,EAAE;AAAvB,SAAP;AACH;AACJ,KAND,MAMK;AACD,aAAO;AAACM,QAAAA,OAAO,EAAE,KAAV;AAAiBN,QAAAA,KAAK,EAAE;AAAxB,OAAP;AACH;AACJ;;AAEDE,EAAAA,YAAY,GAAE;AACV,QAAIS,iBAAiB,GAAG,KAAKP,gBAAL,EAAxB;AACA,QAAIQ,eAAe,GAAG,KAAKP,cAAL,EAAtB;;AAEA,QAAG,CAACM,iBAAiB,CAACL,OAAtB,EAA8B;AAC1B,WAAKO,QAAL,CAAc;AAACZ,QAAAA,IAAI,EAAE,IAAP;AAAaD,QAAAA,KAAK,EAAEW,iBAAiB,CAACG;AAAtC,OAAd;AACH,KAFD,MAEM,IAAI,CAACF,eAAe,CAACN,OAArB,EAA6B;AAC/B,WAAKO,QAAL,CAAc;AAACZ,QAAAA,IAAI,EAAE,IAAP;AAAaD,QAAAA,KAAK,EAAEY,eAAe,CAACE;AAApC,OAAd;AACH,KAFK,MAED;AACD;AACA,WAAKD,QAAL,CAAc;AAACZ,QAAAA,IAAI,EAAE,KAAP;AAAcD,QAAAA,KAAK,EAAE;AAArB,OAAd;AACH;AACJ;;AAEDe,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKpB,KAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAEoB,OAAO,CAACxB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAiC,MAAA,OAAO,EAAC,WAAzC;AAAqD,MAAA,KAAK,EAAC,SAA3D;AAAqE,MAAA,gBAAgB,MAArF;AAAsF,MAAA,OAAO,EAAE,KAAKU,YAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,EAII,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWI,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKD,KAA9B,CADJ,CAJJ,CADJ;AAUH;;AA9DmC;;AAiExC,eAAeb,UAAU,CAACI,MAAD,CAAV,CAAmBG,gBAAnB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles'\nimport BuildIcon from '@material-ui/icons/Build'\nimport Alert from '@material-ui/core/Snackbar'\nimport Snackbar from '@material-ui/core/Snackbar'\n\n\n\nconst styles = () => ({\n    sectionHeader: {\n        marginTop: '40px'\n    }\n});\n\n\nclass ParsingContainer extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            target: props.target,\n            features: props.features,\n            error: \"\",\n            open: false\n        }\n        this.buildNetwork = this.buildNetwork.bind(this)\n        this.validateFeatures = this.validateFeatures.bind(this)\n        this.validateTarget = this.validateTarget.bind(this)\n    }\n\n    validateTarget(){\n        if(this.state.target != ''){\n            return {success: true, error: ''}\n        }else{\n            console.log(\"ISSUE\")\n            return {success: false, error: 'There must be a target selected.'}\n        }\n    }\n\n    validateFeatures(){\n        if(this.state.features.length >= 1){\n            if(this.state.features.includes(this.state.target)){\n                return {success: false, error: \"Prediction targets cannot be a feature.\"}\n            }else{\n                return {success: true, error: \"\"}\n            }\n        }else{\n            return {success: false, error: \"There must be at least one feature to predict the target from.\"}\n        }\n    }\n\n    buildNetwork(){\n        var featuresValidated = this.validateFeatures()\n        var targetValidated = this.validateTarget()\n\n        if(!featuresValidated.success){\n            this.setState({open: true, error: featuresValidated.message})\n        }else if (!targetValidated.success){\n            this.setState({open: true, error: targetValidated.message})\n        }else{\n            //TODO\n            this.setState({open: false, error: \"\"})\n        }\n    }\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <div>\n                <h3 className={classes.sectionHeader}>Train</h3>\n                <br></br>\n                <Button startIcon={<BuildIcon/>} variant='contained' color='primary' disableElevation onClick={this.buildNetwork}>Build neural network</Button>\n                <Snackbar open={this.state.open}>\n                    <Alert severity='error'>{this.error}</Alert>\n                </Snackbar>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(ParsingContainer)"]},"metadata":{},"sourceType":"module"}