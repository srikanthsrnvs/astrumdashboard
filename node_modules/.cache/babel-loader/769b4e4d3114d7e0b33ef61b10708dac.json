{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/src/components/projectsTable.js\";\nimport React, { useEffect, useState, useReducer } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nfunction createData(id, dateCreated, accuracy, size, downloadLink) {\n  return {\n    id,\n    dateCreated,\n    accuracy,\n    size,\n    downloadLink\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  },\n  content: {\n    paddingLeft: 100,\n    paddingTop: 75,\n    paddingRight: 50\n  }\n});\nexport default function ProjectsTable(props) {\n  const classes = useStyles();\n  const firebase = props.firebase;\n  const user = props.user;\n  const [data, setData] = useState({});\n  const [rows, setRows] = useReducer((files, {\n    type,\n    value\n  }) => {\n    switch (type) {\n      case \"add\":\n        return [...files, value];\n\n      case \"remove\":\n        return files.filter((_, index) => index !== value);\n\n      default:\n        return files;\n    }\n  }, []);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function updateTableEntries(data) {\n    var rows = [];\n\n    for (var job_id in Object.keys(data)) {\n      console.log(Object.keys(data));\n      var row = {};\n      row.name = data[job_id].name;\n      row.status = data[job_id].status;\n      row.type = data[job_id].type;\n      row.predictionLink = data[job_id].prediction_link;\n      row.downloadLink = data[job_id].downloadLink;\n      rows.push(row);\n    }\n\n    setRows(rows);\n  }\n\n  function getData() {\n    firebase.listenForData(user, function (data) {\n      updateTableEntries(data);\n      setData(data);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"All Projects\"), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"Projects Table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Project Name\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Status\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Model Type\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Perform Predictions\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Download Model\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, rows.map(row => React.createElement(StyledTableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, row.downloadLink), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, row.status), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, row.type), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, row.predictionLink), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, row.downloadLink)))))));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/src/components/projectsTable.js"],"names":["React","useEffect","useState","useReducer","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","createData","id","dateCreated","accuracy","size","downloadLink","rows","useStyles","table","minWidth","content","paddingLeft","paddingTop","paddingRight","ProjectsTable","props","classes","firebase","user","data","setData","setRows","files","type","value","filter","_","index","getData","updateTableEntries","job_id","Object","keys","console","log","row","name","status","predictionLink","prediction_link","push","listenForData","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,eAAe,GAAGT,UAAU,CAACU,KAAK,KAAK;AAC3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADlC;AAEJC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAFxB,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALqC,CAAL,CAAN,CAAV,CAQpBf,SARoB,CAAxB;AAUA,MAAMgB,cAAc,GAAGpB,UAAU,CAACU,KAAK,KAAK;AAC1CW,EAAAA,IAAI,EAAE;AACJ,0BAAsB;AACpBT,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcS,UAAd,CAAyBC;AADtB;AADlB;AADoC,CAAL,CAAN,CAAV,CAMnBhB,QANmB,CAAvB;;AAQA,SAASiB,UAAT,CAAoBC,EAApB,EAAwBC,WAAxB,EAAqCC,QAArC,EAA+CC,IAA/C,EAAqDC,YAArD,EAAmE;AACjE,SAAO;AAAEJ,IAAAA,EAAF;AAAMC,IAAAA,WAAN;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXN,UAAU,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,EAA7B,EAAiC,GAAjC,CADC,EAEXA,UAAU,CAAC,oBAAD,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,GAArC,CAFC,EAGXA,UAAU,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,EAAtB,EAA0B,GAA1B,CAHC,EAIXA,UAAU,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,GAA1B,CAJC,EAKXA,UAAU,CAAC,aAAD,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,EAA3B,EAA+B,GAA/B,CALC,CAAb;AAQA,MAAMO,SAAS,GAAG9B,UAAU,CAAC;AAC3B+B,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADoB;AAI3BC,EAAAA,OAAO,EAAC;AACNC,IAAAA,WAAW,EAAE,GADP;AAENC,IAAAA,UAAU,EAAE,EAFN;AAGNC,IAAAA,YAAY,EAAE;AAHR;AAJmB,CAAD,CAA5B;AAWA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB9C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgC,IAAD,EAAOe,OAAP,IAAkB9C,UAAU,CAAC,CAAC+C,KAAD,EAAQ;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAR,KAA4B;AAC7D,YAAQD,IAAR;AACE,WAAK,KAAL;AACE,eAAO,CAAC,GAAGD,KAAJ,EAAWE,KAAX,CAAP;;AACF,WAAK,QAAL;AACE,eAAOF,KAAK,CAACG,MAAN,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,KAAKH,KAArC,CAAP;;AACF;AACE,eAAOF,KAAP;AANJ;AAQD,GATiC,EAS/B,EAT+B,CAAlC;AAWAjD,EAAAA,SAAS,CAAC,MAAM;AACduD,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,kBAAT,CAA4BV,IAA5B,EAAiC;AAC/B,QAAIb,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIwB,MAAT,IAAmBC,MAAM,CAACC,IAAP,CAAYb,IAAZ,CAAnB,EAAqC;AACnCc,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,IAAP,CAAYb,IAAZ,CAAZ;AACA,UAAIgB,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACC,IAAJ,GAAWjB,IAAI,CAACW,MAAD,CAAJ,CAAaM,IAAxB;AACAD,MAAAA,GAAG,CAACE,MAAJ,GAAalB,IAAI,CAACW,MAAD,CAAJ,CAAaO,MAA1B;AACAF,MAAAA,GAAG,CAACZ,IAAJ,GAAWJ,IAAI,CAACW,MAAD,CAAJ,CAAaP,IAAxB;AACAY,MAAAA,GAAG,CAACG,cAAJ,GAAqBnB,IAAI,CAACW,MAAD,CAAJ,CAAaS,eAAlC;AACAJ,MAAAA,GAAG,CAAC9B,YAAJ,GAAmBc,IAAI,CAACW,MAAD,CAAJ,CAAazB,YAAhC;AACAC,MAAAA,IAAI,CAACkC,IAAL,CAAUL,GAAV;AACD;;AACDd,IAAAA,OAAO,CAACf,IAAD,CAAP;AACD;;AAED,WAASsB,OAAT,GAAkB;AAChBX,IAAAA,QAAQ,CAACwB,aAAT,CAAuBvB,IAAvB,EAA6B,UAASC,IAAT,EAAc;AACzCU,MAAAA,kBAAkB,CAACV,IAAD,CAAlB;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD;AAID;;AAED,SACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACN,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAE1B,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEgC,OAAO,CAACR,KAA1B;AAAiC,kBAAW,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,CADF,CADF,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACoC,GAAL,CAASP,GAAG,IACX,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,GAAG,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,IAA3B;AAAgC,IAAA,KAAK,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GAAG,CAAC9B,YADP,CADF,EAIE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC8B,GAAG,CAACE,MAApC,CAJF,EAKE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCF,GAAG,CAACZ,IAApC,CALF,EAME,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCY,GAAG,CAACG,cAApC,CANF,EAOE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCH,GAAG,CAAC9B,YAApC,CAPF,CADD,CADH,CAVF,CADF,CAJF,CADF;AAiCD","sourcesContent":["import React, {useEffect, useState, useReducer} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nfunction createData(id, dateCreated, accuracy, size, downloadLink) {\n  return { id, dateCreated, accuracy, size, downloadLink };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n  content:{\n    paddingLeft: 100,\n    paddingTop: 75,\n    paddingRight: 50\n  }\n});\n\nexport default function ProjectsTable(props) {\n  const classes = useStyles();\n  const firebase = props.firebase\n  const user = props.user\n  const [data, setData] = useState({})\n  const [rows, setRows] = useReducer((files, { type, value }) => {\n    switch (type) {\n      case \"add\":\n        return [...files, value];\n      case \"remove\":\n        return files.filter((_, index) => index !== value);\n      default:\n        return files;\n    }\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function updateTableEntries(data){\n    var rows = []\n    for (var job_id in Object.keys(data)){\n      console.log(Object.keys(data))\n      var row = {}\n      row.name = data[job_id].name\n      row.status = data[job_id].status\n      row.type = data[job_id].type\n      row.predictionLink = data[job_id].prediction_link\n      row.downloadLink = data[job_id].downloadLink\n      rows.push(row)\n    }\n    setRows(rows)\n  }\n\n  function getData(){\n    firebase.listenForData(user, function(data){\n      updateTableEntries(data)\n      setData(data)\n    })\n  }\n\n  return (\n    <div className={classes.content}>\n      <h1>\n        All Projects\n      </h1>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"Projects Table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Project Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Status</StyledTableCell>\n              <StyledTableCell align=\"right\">Model Type</StyledTableCell>\n              <StyledTableCell align=\"right\">Perform Predictions</StyledTableCell>\n              <StyledTableCell align=\"right\">Download Model</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.downloadLink}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.status}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.predictionLink}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.downloadLink}</StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}