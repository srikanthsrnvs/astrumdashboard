{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/src/components/projectBuilder.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TaskTypePicker from './taskTypePicker';\nimport ImageClassiferBuilder from './imageClassiferBuilder';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  },\n  chip: {\n    marginTop: '10px'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    paddingTop: 75,\n    paddingLeft: 100\n  }\n}));\nexport default function ProjectBuilder(props) {\n  const classes = styles();\n  const [selectedType, setSelectedType] = useState(0);\n  const user = props.user;\n  const firebase = props.firebase;\n\n  const ShowBuilder = function () {\n    if (selectedType == 0) {\n      return React.createElement(TaskTypePicker, {\n        onClick: setSelectedType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    } else if (selectedType == 1) {\n      return React.createElement(ImageClassiferBuilder, {\n        firebase: firebase,\n        user: props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    } else if (selectedType == 2) {\n      return null;\n    } else if (selectedType == 3) {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(ShowBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/src/components/projectBuilder.js"],"names":["React","useState","makeStyles","TaskTypePicker","ImageClassiferBuilder","styles","theme","dropboxButton","marginTop","chip","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","content","paddingTop","paddingLeft","ProjectBuilder","props","classes","selectedType","setSelectedType","user","firebase","ShowBuilder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAGA,MAAMC,MAAM,GAAGH,UAAU,CAACI,KAAK,KAAK;AAChCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,SAAS,EAAE;AADA,GADiB;AAIhCC,EAAAA,IAAI,EAAE;AACFD,IAAAA,SAAS,EAAE;AADT,GAJ0B;AAOhCE,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE,UAHX;AAILC,IAAAA,OAAO,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJJ;AAKL,OAAGT,KAAK,CAACU,MAAN,CAAaN;AALX,GAPuB;AAchCO,EAAAA,OAAO,EAAE;AACLC,IAAAA,UAAU,EAAE,EADP;AAELC,IAAAA,WAAW,EAAE;AAFR;AAduB,CAAL,CAAN,CAAzB;AAoBA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,OAAO,GAAGjB,MAAM,EAAtB;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMwB,IAAI,GAAGJ,KAAK,CAACI,IAAnB;AACA,QAAMC,QAAQ,GAAGL,KAAK,CAACK,QAAvB;;AAEA,QAAMC,WAAW,GAAI,YAAW;AAC5B,QAAIJ,YAAY,IAAI,CAApB,EAAsB;AAClB,aACI,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAEC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIM,IAAID,YAAY,IAAI,CAApB,EAAsB;AACxB,aACI,oBAAC,qBAAD;AAAuB,QAAA,QAAQ,EAAEG,QAAjC;AAA2C,QAAA,IAAI,EAAEL,KAAK,CAACI,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJK,MAIA,IAAIF,YAAY,IAAI,CAApB,EAAsB;AACxB,aACI,IADJ;AAGH,KAJK,MAIA,IAAIA,YAAY,IAAI,CAApB,EAAsB;AACxB,aACI,IADJ;AAGH;AACJ,GAlBD;;AAoBA,SACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACL,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TaskTypePicker from './taskTypePicker'\nimport ImageClassiferBuilder from './imageClassiferBuilder';\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton: {\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        paddingTop: 75,\n        paddingLeft: 100,\n    }\n}));\n\nexport default function ProjectBuilder(props) {\n\n    const classes = styles();\n    const [selectedType, setSelectedType] = useState(0)\n    const user = props.user\n    const firebase = props.firebase\n\n    const ShowBuilder = (function() {\n        if (selectedType == 0){\n            return(\n                <TaskTypePicker onClick={setSelectedType}/>\n            )\n        }else if (selectedType == 1){\n            return(\n                <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n            )\n        }else if (selectedType == 2){\n            return(\n                null\n            )\n        }else if (selectedType == 3){\n            return(\n                null\n            )\n        }\n    })\n\n    return (\n        <div className={classes.content}>\n\n            <ShowBuilder />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}