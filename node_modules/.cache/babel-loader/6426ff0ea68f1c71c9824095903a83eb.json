{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/src/components/fileDropper.js\";\nimport React, { useMemo, useCallback, useReducer, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Chip from '@material-ui/core/Chip';\nimport { CircularProgress } from '@material-ui/core';\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  marginTop: 20\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst chipStyle = {\n  marginTop: '10px',\n  marginRight: '5px'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nexport default function FileDropper(props) {\n  const firebase = props.firebase;\n  const user = props.user;\n  const [showLoader, setShowLoader] = useState(false);\n  const allowedTypes = props.allowedTypes;\n  const [file, setFile] = useState({});\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      setShowLoader(true);\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n      };\n\n      reader.readAsArrayBuffer(file);\n      firebase.upload_file(file, user).then(function (snapshot) {\n        snapshot.ref.getDownloadURL().then(function (url) {\n          var fileName = file.name;\n          const newFile = {\n            name: fileName,\n            metadata: snapshot.metadata,\n            link: url\n          };\n          setFiles(newFile);\n          setShowLoader(false);\n        });\n      });\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: allowedTypes,\n    onDrop\n  });\n\n  const FileChips = () => {\n    props.setFile(file);\n\n    if (file) {\n      return React.createElement(Chip, {\n        variant: \"default\",\n        onDelete: () => setFiles({}),\n        style: chipStyle,\n        key: files[i].name,\n        label: files[i].name.split('.').slice(0, -1).join('.'),\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  };\n\n  const ShowLoader = () => {\n    return showLoader ? React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : null;\n  };\n\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject]);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps({\n    style\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Drop your .zip file here or click to select a file to upload\"), React.createElement(ShowLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(FileChips, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/src/components/fileDropper.js"],"names":["React","useMemo","useCallback","useReducer","useState","useDropzone","Chip","CircularProgress","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","marginTop","activeStyle","chipStyle","marginRight","acceptStyle","rejectStyle","FileDropper","props","firebase","user","showLoader","setShowLoader","allowedTypes","file","setFile","onDrop","acceptedFiles","forEach","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","upload_file","then","snapshot","ref","getDownloadURL","url","fileName","name","newFile","metadata","link","setFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept","FileChips","files","i","split","slice","join","ShowLoader","style"],"mappings":"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","sourcesContent":["import React, {useMemo, useCallback, useReducer, useState} from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Chip from '@material-ui/core/Chip'\nimport { CircularProgress } from '@material-ui/core';\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    marginTop: 20\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst chipStyle = {\n    marginTop: '10px',\n    marginRight: '5px'\n}\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nexport default function FileDropper(props) {\n\n    const firebase = props.firebase;\n    const user = props.user;\n    const [showLoader, setShowLoader] = useState(false)\n    const allowedTypes = props.allowedTypes\n    const [file, setFile] = useState({})\n\n    const onDrop = useCallback((acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n            \n            setShowLoader(true)\n            const reader = new FileReader()\n            reader.onabort = () => console.log('file reading was aborted')\n            reader.onerror = () => console.log('file reading has failed')\n            reader.onload = () => {\n                // Do whatever you want with the file contents\n                const binaryStr = reader.result\n                console.log(binaryStr)\n            }\n            reader.readAsArrayBuffer(file)\n            firebase.upload_file(file, user).then(function(snapshot){\n                snapshot.ref.getDownloadURL().then(function(url){\n                    var fileName = file.name\n                    const newFile = {\n                        name: fileName,\n                        metadata: snapshot.metadata,\n                        link: url\n                    }\n                    setFiles(newFile)\n                    setShowLoader(false)\n                })\n            })\n        })\n    }, [])\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({accept: allowedTypes, onDrop});\n\n    const FileChips = () => {\n        props.setFile(file)\n        if (file){\n            return (\n                <Chip variant='default' onDelete={() => setFiles({})} style={chipStyle} key={files[i].name} label={files[i].name.split('.').slice(0, -1).join('.')} color='primary'></Chip>\n            )\n        }\n        else{\n            return (null)\n        }\n    }\n\n    const ShowLoader = () => {\n        return ( showLoader ? (<CircularProgress />) : (null) )\n    }\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject\n    ]);\n\n    return (\n        <div className=\"container\">\n            <div {...getRootProps({ style })}>\n                <input {...getInputProps()} />\n                <p>Drop your .zip file here or click to select a file to upload</p>\n                <ShowLoader />\n            </div>\n            <div>\n                <FileChips />\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}