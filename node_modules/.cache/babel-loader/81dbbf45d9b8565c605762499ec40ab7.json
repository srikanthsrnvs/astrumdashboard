{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/projectBuilder.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DropboxIcon from './Icons/dropboxIcon';\nimport Chip from '@material-ui/core/Chip';\nimport FeatureChips from './featureChips';\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  },\n  chip: {\n    marginTop: '10px'\n  }\n}));\nexport default function ProjectBuilder(props) {\n  const classes = styles();\n  const [filename, setFilename] = useState(\"No file selected\");\n  const [filelink, setFilelink] = useState(\"\");\n  const [csvHeaders, setCSVHeaders] = useState([]);\n  const [features, setFeatures] = useState([]);\n  const [target, setTarget] = useState(\"\");\n  const user = props.user;\n\n  function deleteSelectedFile() {\n    setFilename(\"No file selected\");\n    setFilelink(\"\");\n    setCSVHeaders([]);\n    setFeatures([]);\n    setTarget(\"\");\n  }\n\n  function getHeaders(link) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'http://127.0.0.1:8080/datasets');\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(JSON.stringify({\n      \"link\": link\n    }));\n    xhr.addEventListener('load', () => {\n      if (xhr.status === 200) {\n        var headers = JSON.parse(xhr.response).headers;\n        setCSVHeaders(headers);\n        setFeatures(headers);\n      }\n    });\n  }\n\n  function connectToDropbox() {\n    var script = document.createElement('script');\n    script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh');\n    script.src = \"https://www.dropbox.com/static/api/2/dropins.js\";\n    script.id = \"dropboxjs\";\n    script.type = \"text/javascript\";\n    document.head.appendChild(script);\n    console.log(\"clicked\");\n    var options = {\n      // Required. Called when a user selects an item in the Chooser.\n      success: function (file) {\n        var filename = file[0].name;\n        setFilelink(file[0].link);\n        setFilename(filename);\n        getHeaders(file[0].link);\n      },\n      cancel: function () {},\n      linkType: \"direct\",\n      // or \"direct\"\n      multiselect: false,\n      // or true\n      folderselect: false,\n      // or true\n      extensions: ['.csv']\n    };\n\n    script.onerror = function () {\n      console.log(\"Err\");\n    };\n\n    script.onload = function () {\n      window.Dropbox.choose(options);\n    };\n\n    if (window.Dropbox) {\n      console.log(\"Trying to open picker\");\n      window.Dropbox.choose(options);\n    }\n  }\n\n  function targetSelected(target) {\n    setTarget(target);\n    console.log(target);\n  }\n\n  function featuresSelected(features) {\n    setFeatures(features);\n    console.log(features);\n  }\n\n  function buildPressed(response) {\n    console.log(response);\n  }\n\n  const ShowFeatures = function () {\n    if (csvHeaders.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FeatureChips, {\n        features: features,\n        onSelection: featuresSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(TargetSelector, {\n        target: target,\n        features: csvHeaders,\n        onSelection: targetSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(ParsingContainer, {\n        target: target,\n        features: features,\n        onBuild: buildPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Let's get started\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"First, you'll need to prepare a dataset. \", React.createElement(\"a\", {\n    href: \"http://www.astrum.ai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Click here\"), \" to check out how your data needs to be prepared before being uploaded to Dropbox.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    startIcon: React.createElement(DropboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }),\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: connectToDropbox,\n    className: classes.dropboxButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Connect to dropbox\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.chip,\n    label: filename,\n    onDelete: deleteSelectedFile,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(ShowFeatures, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/projectBuilder.js"],"names":["React","useState","makeStyles","Button","DropboxIcon","Chip","FeatureChips","TargetSelector","ParsingContainer","styles","theme","dropboxButton","marginTop","chip","ProjectBuilder","props","classes","filename","setFilename","filelink","setFilelink","csvHeaders","setCSVHeaders","features","setFeatures","target","setTarget","user","deleteSelectedFile","getHeaders","link","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","addEventListener","status","headers","parse","response","connectToDropbox","script","document","createElement","setAttribute","src","id","type","head","appendChild","console","log","options","success","file","name","cancel","linkType","multiselect","folderselect","extensions","onerror","onload","window","Dropbox","choose","targetSelected","featuresSelected","buildPressed","ShowFeatures","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DropboxIcon from './Icons/dropboxIcon'\nimport Chip from '@material-ui/core/Chip'\nimport FeatureChips from './featureChips'\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer'\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton: {\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    }\n}));\n\nexport default function ProjectBuilder(props) {\n\n    const classes = styles();\n    const [filename, setFilename] = useState(\"No file selected\");\n    const [filelink, setFilelink] = useState(\"\");\n    const [csvHeaders, setCSVHeaders] = useState([])\n    const [features, setFeatures] = useState([])\n    const [target, setTarget] = useState(\"\")\n    const user = props.user\n\n    function deleteSelectedFile() {\n        setFilename(\"No file selected\")\n        setFilelink(\"\")\n        setCSVHeaders([])\n        setFeatures([])\n        setTarget(\"\")\n    }\n\n    function getHeaders(link) {\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST', 'http://127.0.0.1:8080/datasets')\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(JSON.stringify({ \"link\": link }))\n        xhr.addEventListener('load', () => {\n            if (xhr.status === 200) {\n                var headers = JSON.parse(xhr.response).headers\n                setCSVHeaders(headers)\n                setFeatures(headers)\n            }\n        })\n    }\n\n    function connectToDropbox() {\n\n        var script = document.createElement('script')\n        script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh')\n        script.src = \"https://www.dropbox.com/static/api/2/dropins.js\"\n        script.id = \"dropboxjs\"\n        script.type = \"text/javascript\"\n        document.head.appendChild(script);\n\n        console.log(\"clicked\")\n        var options = {\n\n            // Required. Called when a user selects an item in the Chooser.\n            success: function (file) {\n                var filename = file[0].name\n                setFilelink(file[0].link)\n                setFilename(filename)\n                getHeaders(file[0].link)\n            },\n            cancel: function () {\n\n            },\n            linkType: \"direct\", // or \"direct\"\n            multiselect: false, // or true\n            folderselect: false, // or true\n            extensions: ['.csv']\n        };\n        script.onerror = function () {\n            console.log(\"Err\")\n        }\n        script.onload = function () {\n            window.Dropbox.choose(options)\n        }\n        if (window.Dropbox) {\n            console.log(\"Trying to open picker\")\n            window.Dropbox.choose(options)\n        }\n\n    }\n\n    function targetSelected(target) {\n        setTarget(target)\n        console.log(target)\n    }\n\n    function featuresSelected(features) {\n        setFeatures(features)\n        console.log(features)\n    }\n\n    function buildPressed(response) {\n        console.log(response)\n    }\n\n    const ShowFeatures = (function () {\n        if (csvHeaders.length > 0) {\n            return (\n                <div>\n                    <FeatureChips features={features} onSelection={featuresSelected} />\n                    <br></br>\n                    <TargetSelector target={target} features={csvHeaders} onSelection={targetSelected} />\n                    <br></br>\n                    <ParsingContainer target={target} features={features} onBuild={buildPressed}></ParsingContainer>\n                </div>\n            )\n        } else {\n            return (\n                null\n            )\n        }\n    })\n\n\n    return (\n        <div>\n            <h1>Let's get started</h1>\n            <span>First, you'll need to prepare a dataset. <a href=\"http://www.astrum.ai\">Click here</a> to check out how your data needs to be prepared before being uploaded to Dropbox.</span>\n            <br></br>\n            <div>\n                <Button startIcon={<DropboxIcon />} variant='outlined' color='primary' onClick={connectToDropbox} className={classes.dropboxButton}>Connect to dropbox</Button>\n                <br></br>\n                <Chip className={classes.chip} label={filename} onDelete={deleteSelectedFile} color=\"primary\" />\n                <br></br>\n                <ShowFeatures />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}