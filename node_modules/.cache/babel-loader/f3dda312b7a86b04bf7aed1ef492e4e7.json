{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/build.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport Chip from '@material-ui/core/Chip';\nimport FeatureChips from './featureChips';\nimport TargetSelector from './targetSelector';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  },\n  chip: {\n    marginTop: '10px'\n  }\n}));\nexport default function Builder() {\n  const classes = styles();\n  const [filename, setFilename] = useState(\"No file selected\");\n  const [filelink, setFilelink] = useState(\"\");\n  const [csvHeaders, setCSVHeaders] = useState([]);\n  const [features, setFeatures] = useState([]);\n  const [target, setTarget] = useState(\"\");\n\n  function deleteSelectedFile() {\n    setFilename(\"No file selected\");\n    setFilelink(\"\");\n    setCSVHeaders([]);\n    setFeatures([]);\n    setTarget(\"\");\n  }\n\n  function getHeaders(link) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'http://127.0.0.1:8080/datasets');\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(JSON.stringify({\n      \"link\": link\n    }));\n    xhr.addEventListener('load', () => {\n      if (xhr.status == 200) {\n        var headers = JSON.parse(xhr.response).headers;\n        setCSVHeaders(headers);\n        setFeatures(headers);\n      }\n    });\n  }\n\n  function connectToDropbox() {\n    var script = document.createElement('script');\n    script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh');\n    script.src = \"https://www.dropbox.com/static/api/2/dropins.js\";\n    script.id = \"dropboxjs\";\n    script.type = \"text/javascript\";\n    document.head.appendChild(script);\n    console.log(\"clicked\");\n    var options = {\n      // Required. Called when a user selects an item in the Chooser.\n      success: function (file) {\n        var filename = file[0].name;\n        var fileSize = file[0].bytes / 1024 * 1024;\n        setFilelink(file[0].link);\n        setFilename(filename);\n        getHeaders(file[0].link);\n      },\n      cancel: function () {},\n      linkType: \"direct\",\n      // or \"direct\"\n      multiselect: false,\n      // or true\n      folderselect: false,\n      // or true\n      extensions: ['.csv']\n    };\n\n    script.onerror = function () {\n      console.log(\"Err\");\n    };\n\n    script.onload = function () {\n      window.Dropbox.choose(options);\n    };\n\n    if (window.Dropbox) {\n      console.log(\"Trying to open picker\");\n      window.Dropbox.choose(options);\n    }\n  }\n\n  function targetSelected(target) {\n    setTarget(target);\n    console.log(target);\n  }\n\n  function featuresSelected(features) {\n    setFeatures(features);\n    console.log(features);\n  }\n\n  const ShowFeatures = function () {\n    if (csvHeaders.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(FeatureChips, {\n        features: features,\n        onSelection: featuresSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(TargetSelector, {\n        features: csvHeaders,\n        onSelection: targetSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Let's get started\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"First, you'll need to prepare a dataset. \", React.createElement(\"a\", {\n    href: \"http://www.astrum.ai\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Click here\"), \" to check out how your data needs to be prepared before being uploaded to Dropbox.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    startIcon: React.createElement(CloudUpload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }),\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: connectToDropbox,\n    className: classes.dropboxButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Connect to dropbox\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Chip, {\n    className: classes.chip,\n    label: filename,\n    onDelete: deleteSelectedFile,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(ShowFeatures, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/build.js"],"names":["React","useState","makeStyles","Button","CloudUpload","Chip","FeatureChips","TargetSelector","styles","theme","dropboxButton","marginTop","chip","Builder","classes","filename","setFilename","filelink","setFilelink","csvHeaders","setCSVHeaders","features","setFeatures","target","setTarget","deleteSelectedFile","getHeaders","link","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","addEventListener","status","headers","parse","response","connectToDropbox","script","document","createElement","setAttribute","src","id","type","head","appendChild","console","log","options","success","file","name","fileSize","bytes","cancel","linkType","multiselect","folderselect","extensions","onerror","onload","window","Dropbox","choose","targetSelected","featuresSelected","ShowFeatures","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUpload from '@material-ui/icons/CloudUpload'\nimport Chip from '@material-ui/core/Chip'\nimport FeatureChips from './featureChips'\nimport TargetSelector from './targetSelector';\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton:{\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    }\n  }));\n\nexport default function Builder(){\n\n    const classes = styles();\n    const [filename, setFilename] = useState(\"No file selected\");\n    const [filelink, setFilelink] = useState(\"\");\n    const [csvHeaders, setCSVHeaders] = useState([])\n    const [features, setFeatures] = useState([])\n    const [target, setTarget] = useState(\"\")\n\n    function deleteSelectedFile(){\n        setFilename(\"No file selected\")\n        setFilelink(\"\")\n        setCSVHeaders([])\n        setFeatures([])\n        setTarget(\"\")\n    }\n\n    function getHeaders(link){\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST', 'http://127.0.0.1:8080/datasets')\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(JSON.stringify({\"link\": link}))\n        xhr.addEventListener('load', () => {\n            if (xhr.status == 200){\n                var headers = JSON.parse(xhr.response).headers\n                setCSVHeaders(headers)\n                setFeatures(headers)\n            }\n        })\n    }\n\n    function connectToDropbox(){\n\n        var script = document.createElement('script')\n        script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh')\n        script.src = \"https://www.dropbox.com/static/api/2/dropins.js\"\n        script.id = \"dropboxjs\"\n        script.type = \"text/javascript\"\n        document.head.appendChild(script);\n\n        console.log(\"clicked\")\n        var options = {\n\n            // Required. Called when a user selects an item in the Chooser.\n            success: function(file) {\n                var filename = file[0].name\n                var fileSize = file[0].bytes/1024*1024\n                setFilelink(file[0].link)\n                setFilename(filename)\n                getHeaders(file[0].link)\n            },\n            cancel: function() {\n        \n            },\n            linkType: \"direct\", // or \"direct\"\n            multiselect: false, // or true\n            folderselect: false, // or true\n            extensions: ['.csv']\n        };\n        script.onerror = function(){\n            console.log(\"Err\")\n        }\n        script.onload = function(){\n            window.Dropbox.choose(options)\n        }\n        if (window.Dropbox){\n            console.log(\"Trying to open picker\")\n            window.Dropbox.choose(options)\n        }\n        \n    }\n\n    function targetSelected(target){\n        setTarget(target)\n        console.log(target)\n    }\n\n    function featuresSelected(features){\n        setFeatures(features)\n        console.log(features)\n    }\n\n    const ShowFeatures = (function(){\n        if(csvHeaders.length > 0){\n            return(\n                <div>\n                    <FeatureChips features={features} onSelection={featuresSelected}/>\n                    <br></br>\n                    <TargetSelector features={csvHeaders} onSelection={targetSelected}/>\n                </div>\n            )\n        }else{\n            return (\n                null\n            )\n        }\n    })\n\n\n    return (\n        <div>\n            <h1>Let's get started</h1>\n            <span>First, you'll need to prepare a dataset. <a href=\"http://www.astrum.ai\">Click here</a> to check out how your data needs to be prepared before being uploaded to Dropbox.</span>\n            <br></br>\n            <div>\n                <Button startIcon={<CloudUpload/>} variant='outlined' color='primary' onClick={connectToDropbox} className={classes.dropboxButton}>Connect to dropbox</Button>\n                <br></br>\n                <Chip className={classes.chip} label={filename} onDelete={deleteSelectedFile} color=\"primary\" />\n                <br></br>\n                <ShowFeatures />\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}