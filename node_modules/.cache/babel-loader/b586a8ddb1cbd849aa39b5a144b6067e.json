{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/projectBuilder.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DropboxIcon from './Icons/dropboxIcon';\nimport Chip from '@material-ui/core/Chip';\nimport FeatureChips from './featureChips';\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dropzone from 'react-dropzone';\nimport FileDropper from './fileDropper';\nimport TaskTypePicker from './taskTypePicker';\nimport ImageClassiferBuilder from './imageClassiferBuilder';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  },\n  chip: {\n    marginTop: '10px'\n  }\n}));\nexport default function ProjectBuilder(props) {\n  const classes = styles();\n  const [filename, setFilename] = useState(\"No file selected\");\n  const [filelink, setFilelink] = useState(\"\");\n  const [csvHeaders, setCSVHeaders] = useState([]);\n  const [features, setFeatures] = useState([]);\n  const [target, setTarget] = useState(\"\");\n  const [selectedType, setSelectedType] = useState(0);\n  const user = props.user;\n  const firebase = props.firebase;\n\n  function deleteSelectedFile() {\n    setFilename(\"No file selected\");\n    setFilelink(\"\");\n    setCSVHeaders([]);\n    setFeatures([]);\n    setTarget(\"\");\n  }\n\n  function getHeaders(link, size) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://astrumdashboard.appspot.com/datasets');\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(JSON.stringify({\n      \"link\": link,\n      \"size\": size,\n      \"uid\": user.uid\n    }));\n    xhr.addEventListener('load', () => {\n      if (xhr.status === 200) {\n        var headers = JSON.parse(xhr.response).features;\n        setCSVHeaders(headers);\n        setFeatures(headers);\n      }\n    });\n  }\n\n  function connectToDropbox() {\n    var script = document.createElement('script');\n    script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh');\n    script.src = \"https://www.dropbox.com/static/api/2/dropins.js\";\n    script.id = \"dropboxjs\";\n    script.type = \"text/javascript\";\n    document.head.appendChild(script);\n    console.log(\"clicked\");\n    var options = {\n      // Required. Called when a user selects an item in the Chooser.\n      success: function (file) {\n        var filename = file[0].name;\n        setFilelink(file[0].link);\n        setFilename(filename);\n        getHeaders(file[0].link, file[0].bytes);\n      },\n      cancel: function () {},\n      linkType: \"direct\",\n      // or \"direct\"\n      multiselect: false,\n      // or true\n      folderselect: false,\n      // or true\n      extensions: ['.csv']\n    };\n\n    script.onerror = function () {\n      console.log(\"Err\");\n    };\n\n    script.onload = function () {\n      window.Dropbox.choose(options);\n    };\n\n    if (window.Dropbox) {\n      console.log(\"Trying to open picker\");\n      window.Dropbox.choose(options);\n    }\n  }\n\n  function targetSelected(target) {\n    setTarget(target);\n    console.log(target);\n  }\n\n  function featuresSelected(features) {\n    setFeatures(features);\n    console.log(features);\n  }\n\n  function buildPressed(response) {\n    console.log(response);\n  }\n\n  const ShowFeatures = function () {\n    if (features.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(FeatureChips, {\n        features: features,\n        onSelection: featuresSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(TargetSelector, {\n        target: target,\n        features: csvHeaders,\n        onSelection: targetSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(ParsingContainer, {\n        target: target,\n        features: features,\n        onBuild: buildPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const ShowBuilder = function () {\n    if (selectedType == 0) {\n      return React.createElement(TaskTypePicker, {\n        onClick: setSelectedType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    } else if (selectedType == 1) {\n      return React.createElement(ImageClassiferBuilder, {\n        firebase: firebase,\n        user: props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    } else if (selectedType == 2) {\n      return null;\n    } else if (selectedType == 3) {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Let's get started\"), React.createElement(ShowBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/projectBuilder.js"],"names":["React","useState","makeStyles","Button","DropboxIcon","Chip","FeatureChips","TargetSelector","ParsingContainer","CircularProgress","Dropzone","FileDropper","TaskTypePicker","ImageClassiferBuilder","styles","theme","dropboxButton","marginTop","chip","ProjectBuilder","props","classes","filename","setFilename","filelink","setFilelink","csvHeaders","setCSVHeaders","features","setFeatures","target","setTarget","selectedType","setSelectedType","user","firebase","deleteSelectedFile","getHeaders","link","size","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","uid","addEventListener","status","headers","parse","response","connectToDropbox","script","document","createElement","setAttribute","src","id","type","head","appendChild","console","log","options","success","file","name","bytes","cancel","linkType","multiselect","folderselect","extensions","onerror","onload","window","Dropbox","choose","targetSelected","featuresSelected","buildPressed","ShowFeatures","length","ShowBuilder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAGA,MAAMC,MAAM,GAAGZ,UAAU,CAACa,KAAK,KAAK;AAChCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,SAAS,EAAE;AADA,GADiB;AAIhCC,EAAAA,IAAI,EAAE;AACFD,IAAAA,SAAS,EAAE;AADT;AAJ0B,CAAL,CAAN,CAAzB;AASA,eAAe,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,OAAO,GAAGP,MAAM,EAAtB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,kBAAD,CAAxC;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMiC,IAAI,GAAGd,KAAK,CAACc,IAAnB;AACA,QAAMC,QAAQ,GAAGf,KAAK,CAACe,QAAvB;;AAEA,WAASC,kBAAT,GAA8B;AAC1Bb,IAAAA,WAAW,CAAC,kBAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH;;AAED,WAASM,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC5B,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,8CAAjB;AACAF,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAe;AAAE,cAAQR,IAAV;AAAgB,cAASC,IAAzB;AAA+B,aAAOL,IAAI,CAACa;AAA3C,KAAf,CAAT;AACAP,IAAAA,GAAG,CAACQ,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AAC/B,UAAIR,GAAG,CAACS,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAIC,OAAO,GAAGL,IAAI,CAACM,KAAL,CAAWX,GAAG,CAACY,QAAf,EAAyBxB,QAAvC;AACAD,QAAAA,aAAa,CAACuB,OAAD,CAAb;AACArB,QAAAA,WAAW,CAACqB,OAAD,CAAX;AACH;AACJ,KAND;AAOH;;AAED,WAASG,gBAAT,GAA4B;AAExB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,YAAP,CAAoB,cAApB,EAAoC,iBAApC;AACAH,IAAAA,MAAM,CAACI,GAAP,GAAa,iDAAb;AACAJ,IAAAA,MAAM,CAACK,EAAP,GAAY,WAAZ;AACAL,IAAAA,MAAM,CAACM,IAAP,GAAc,iBAAd;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAIC,OAAO,GAAG;AAEV;AACAC,MAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AACrB,YAAI7C,QAAQ,GAAG6C,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAAvB;AACA3C,QAAAA,WAAW,CAAC0C,IAAI,CAAC,CAAD,CAAJ,CAAQ7B,IAAT,CAAX;AACAf,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAe,QAAAA,UAAU,CAAC8B,IAAI,CAAC,CAAD,CAAJ,CAAQ7B,IAAT,EAAe6B,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAvB,CAAV;AACH,OARS;AASVC,MAAAA,MAAM,EAAE,YAAY,CAEnB,CAXS;AAYVC,MAAAA,QAAQ,EAAE,QAZA;AAYU;AACpBC,MAAAA,WAAW,EAAE,KAbH;AAaU;AACpBC,MAAAA,YAAY,EAAE,KAdJ;AAcW;AACrBC,MAAAA,UAAU,EAAE,CAAC,MAAD;AAfF,KAAd;;AAiBApB,IAAAA,MAAM,CAACqB,OAAP,GAAiB,YAAY;AACzBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,KAFD;;AAGAV,IAAAA,MAAM,CAACsB,MAAP,GAAgB,YAAY;AACxBC,MAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBd,OAAtB;AACH,KAFD;;AAGA,QAAIY,MAAM,CAACC,OAAX,EAAoB;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAa,MAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBd,OAAtB;AACH;AAEJ;;AAED,WAASe,cAAT,CAAwBlD,MAAxB,EAAgC;AAC5BC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAYlC,MAAZ;AACH;;AAED,WAASmD,gBAAT,CAA0BrD,QAA1B,EAAoC;AAChCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAmC,IAAAA,OAAO,CAACC,GAAR,CAAYpC,QAAZ;AACH;;AAED,WAASsD,YAAT,CAAsB9B,QAAtB,EAAgC;AAC5BW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACH;;AAED,QAAM+B,YAAY,GAAI,YAAY;AAC9B,QAAIvD,QAAQ,CAACwD,MAAT,GAAkB,CAAtB,EAAyB;AACrB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAExD,QAAxB;AAAkC,QAAA,WAAW,EAAEqD,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEnD,MAAxB;AAAgC,QAAA,QAAQ,EAAEJ,UAA1C;AAAsD,QAAA,WAAW,EAAEsD,cAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,gBAAD;AAAkB,QAAA,MAAM,EAAElD,MAA1B;AAAkC,QAAA,QAAQ,EAAEF,QAA5C;AAAsD,QAAA,OAAO,EAAEsD,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH,KAVD,MAUO;AACH,aACI,IADJ;AAGH;AACJ,GAhBD;;AAkBA,QAAMG,WAAW,GAAI,YAAW;AAC5B,QAAIrD,YAAY,IAAI,CAApB,EAAsB;AAClB,aACI,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAEC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIM,IAAID,YAAY,IAAI,CAApB,EAAsB;AACxB,aACI,oBAAC,qBAAD;AAAuB,QAAA,QAAQ,EAAEG,QAAjC;AAA2C,QAAA,IAAI,EAAEf,KAAK,CAACc,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJK,MAIA,IAAIF,YAAY,IAAI,CAApB,EAAsB;AACxB,aACI,IADJ;AAGH,KAJK,MAIA,IAAIA,YAAY,IAAI,CAApB,EAAsB;AACxB,aACI,IADJ;AAGH;AACJ,GAlBD;;AAoBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DropboxIcon from './Icons/dropboxIcon'\nimport Chip from '@material-ui/core/Chip'\nimport FeatureChips from './featureChips'\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dropzone from 'react-dropzone'\nimport FileDropper from './fileDropper'\nimport TaskTypePicker from './taskTypePicker'\nimport ImageClassiferBuilder from './imageClassiferBuilder';\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton: {\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    }\n}));\n\nexport default function ProjectBuilder(props) {\n\n    const classes = styles();\n    const [filename, setFilename] = useState(\"No file selected\");\n    const [filelink, setFilelink] = useState(\"\");\n    const [csvHeaders, setCSVHeaders] = useState([])\n    const [features, setFeatures] = useState([])\n    const [target, setTarget] = useState(\"\")\n    const [selectedType, setSelectedType] = useState(0)\n    const user = props.user\n    const firebase = props.firebase\n\n    function deleteSelectedFile() {\n        setFilename(\"No file selected\")\n        setFilelink(\"\")\n        setCSVHeaders([])\n        setFeatures([])\n        setTarget(\"\")\n    }\n\n    function getHeaders(link, size) {\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST', 'https://astrumdashboard.appspot.com/datasets')\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(JSON.stringify({ \"link\": link, \"size\":  size, \"uid\": user.uid}))\n        xhr.addEventListener('load', () => {\n            if (xhr.status === 200) {\n                var headers = JSON.parse(xhr.response).features\n                setCSVHeaders(headers)\n                setFeatures(headers)\n            }\n        })\n    }\n\n    function connectToDropbox() {\n\n        var script = document.createElement('script')\n        script.setAttribute('data-app-key', 'z5p9y3pr6ufqsbh')\n        script.src = \"https://www.dropbox.com/static/api/2/dropins.js\"\n        script.id = \"dropboxjs\"\n        script.type = \"text/javascript\"\n        document.head.appendChild(script);\n\n        console.log(\"clicked\")\n        var options = {\n\n            // Required. Called when a user selects an item in the Chooser.\n            success: function (file) {\n                var filename = file[0].name\n                setFilelink(file[0].link)\n                setFilename(filename)\n                getHeaders(file[0].link, file[0].bytes)\n            },\n            cancel: function () {\n\n            },\n            linkType: \"direct\", // or \"direct\"\n            multiselect: false, // or true\n            folderselect: false, // or true\n            extensions: ['.csv']\n        };\n        script.onerror = function () {\n            console.log(\"Err\")\n        }\n        script.onload = function () {\n            window.Dropbox.choose(options)\n        }\n        if (window.Dropbox) {\n            console.log(\"Trying to open picker\")\n            window.Dropbox.choose(options)\n        }\n\n    }\n\n    function targetSelected(target) {\n        setTarget(target)\n        console.log(target)\n    }\n\n    function featuresSelected(features) {\n        setFeatures(features)\n        console.log(features)\n    }\n\n    function buildPressed(response) {\n        console.log(response)\n    }\n\n    const ShowFeatures = (function () {\n        if (features.length > 0) {\n            return (\n                <div>\n                    <FeatureChips features={features} onSelection={featuresSelected} />\n                    <br></br>\n                    <TargetSelector target={target} features={csvHeaders} onSelection={targetSelected} />\n                    <br></br>\n                    <ParsingContainer target={target} features={features} onBuild={buildPressed}></ParsingContainer>\n                </div>\n            )\n        } else {\n            return (\n                null\n            )\n        }\n    })\n\n    const ShowBuilder = (function() {\n        if (selectedType == 0){\n            return(\n                <TaskTypePicker onClick={setSelectedType}/>\n            )\n        }else if (selectedType == 1){\n            return(\n                <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n            )\n        }else if (selectedType == 2){\n            return(\n                null\n            )\n        }else if (selectedType == 3){\n            return(\n                null\n            )\n        }\n    })\n\n    return (\n        <div>\n            <h1>Let's get started</h1>\n            <ShowBuilder />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}