{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport { applyTheme } from '../utils/themeBuilder';\nimport Code from './Code';\nvar LANGUAGE_FALLBACK = 'text';\n\nvar CodeBlock =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CodeBlock, _PureComponent);\n\n  function CodeBlock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CodeBlock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CodeBlock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCopy\", function (event) {\n      /**\n       * We don't want to copy the markup after highlighting, but rather the preformatted text in the selection\n       */\n      var data = event.nativeEvent.clipboardData;\n\n      if (data) {\n        event.preventDefault();\n        var selection = window.getSelection();\n\n        if (selection === null) {\n          return;\n        }\n\n        var selectedText = selection.toString();\n        var document = \"<!doctype html><html><head></head><body><pre>\".concat(selectedText, \"</pre></body></html>\");\n        data.clearData();\n        data.setData('text/html', document);\n        data.setData('text/plain', selectedText);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CodeBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _applyTheme = applyTheme(this.props.theme),\n          lineNumberContainerStyle = _applyTheme.lineNumberContainerStyle,\n          codeBlockStyle = _applyTheme.codeBlockStyle,\n          codeContainerStyle = _applyTheme.codeContainerStyle;\n\n      var codeStyle = Object.assign({}, codeBlockStyle, this.props.codeStyle);\n      var codeTagStyle = Object.assign({}, codeContainerStyle, this.props.codeBlockStyle);\n      var props = {\n        language: this.props.language || LANGUAGE_FALLBACK,\n        codeStyle: codeStyle,\n        showLineNumbers: this.props.showLineNumbers,\n        codeTagProps: {\n          style: codeTagStyle\n        },\n        lineNumberContainerStyle: lineNumberContainerStyle,\n        text: this.props.text.toString(),\n        highlight: this.props.highlight\n      };\n      return React.createElement(Code, props);\n    }\n  }]);\n\n  return CodeBlock;\n}(PureComponent);\n\n_defineProperty(CodeBlock, \"displayName\", 'CodeBlock');\n\n_defineProperty(CodeBlock, \"defaultProps\", {\n  showLineNumbers: true,\n  language: LANGUAGE_FALLBACK,\n  theme: {},\n  codeStyle: {},\n  codeBlockStyle: {},\n  highlight: ''\n});\n\nexport { CodeBlock as default };","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/node_modules/react-code-blocks/build/esm/components/CodeBlock.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","React","PureComponent","applyTheme","Code","LANGUAGE_FALLBACK","CodeBlock","_PureComponent","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","event","data","nativeEvent","clipboardData","preventDefault","selection","window","getSelection","selectedText","toString","document","clearData","setData","key","value","render","_applyTheme","props","theme","lineNumberContainerStyle","codeBlockStyle","codeContainerStyle","codeStyle","Object","assign","codeTagStyle","language","showLineNumbers","codeTagProps","style","text","highlight","createElement","default"],"mappings":"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","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport { applyTheme } from '../utils/themeBuilder';\nimport Code from './Code';\nvar LANGUAGE_FALLBACK = 'text';\n\nvar CodeBlock =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CodeBlock, _PureComponent);\n\n  function CodeBlock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CodeBlock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CodeBlock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCopy\", function (event) {\n      /**\n       * We don't want to copy the markup after highlighting, but rather the preformatted text in the selection\n       */\n      var data = event.nativeEvent.clipboardData;\n\n      if (data) {\n        event.preventDefault();\n        var selection = window.getSelection();\n\n        if (selection === null) {\n          return;\n        }\n\n        var selectedText = selection.toString();\n        var document = \"<!doctype html><html><head></head><body><pre>\".concat(selectedText, \"</pre></body></html>\");\n        data.clearData();\n        data.setData('text/html', document);\n        data.setData('text/plain', selectedText);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CodeBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _applyTheme = applyTheme(this.props.theme),\n          lineNumberContainerStyle = _applyTheme.lineNumberContainerStyle,\n          codeBlockStyle = _applyTheme.codeBlockStyle,\n          codeContainerStyle = _applyTheme.codeContainerStyle;\n\n      var codeStyle = Object.assign({}, codeBlockStyle, this.props.codeStyle);\n      var codeTagStyle = Object.assign({}, codeContainerStyle, this.props.codeBlockStyle);\n      var props = {\n        language: this.props.language || LANGUAGE_FALLBACK,\n        codeStyle: codeStyle,\n        showLineNumbers: this.props.showLineNumbers,\n        codeTagProps: {\n          style: codeTagStyle\n        },\n        lineNumberContainerStyle: lineNumberContainerStyle,\n        text: this.props.text.toString(),\n        highlight: this.props.highlight\n      };\n      return React.createElement(Code, props);\n    }\n  }]);\n\n  return CodeBlock;\n}(PureComponent);\n\n_defineProperty(CodeBlock, \"displayName\", 'CodeBlock');\n\n_defineProperty(CodeBlock, \"defaultProps\", {\n  showLineNumbers: true,\n  language: LANGUAGE_FALLBACK,\n  theme: {},\n  codeStyle: {},\n  codeBlockStyle: {},\n  highlight: ''\n});\n\nexport { CodeBlock as default };"]},"metadata":{},"sourceType":"module"}