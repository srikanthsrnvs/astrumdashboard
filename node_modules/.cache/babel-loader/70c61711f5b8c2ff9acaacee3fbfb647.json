{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/imageClassiferBuilder.js\";\nimport React, { useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport FileDropper from './fileDropper';\nimport Button from '@material-ui/core/Button';\nconst styles = {\n  buildButton: {\n    marginTop: '20px'\n  }\n};\nexport default function ImageClassiferBuilder(props) {\n  const [files, setFiles] = useState({});\n\n  function upload_dataset() {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://astrumdashboard.appspot.com/datasets');\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\"); // var post_body = {\n    //     \"type\": \"image_classifier\"\n    // }\n    // for (file in files){\n    //     post_body[\"child_datasets\"][file] = files[file]\n    // }\n    // xhr.send(JSON.stringify({\n    //     post_body\n    // }))\n    // xhr.addEventListener('load', () => {\n    //     if (xhr.status === 200) {\n    //         var headers = JSON.parse(xhr.response).features\n    //         setCSVHeaders(headers)\n    //         setFeatures(headers)\n    //     }\n    // })\n  }\n\n  function build_classifer() {\n    console.log(\"BNutton pressed\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"First we'll need to upload data. In the box below, drop folders containing your image classes\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"You'll need to organize your images into folders to make sure that the algorithm learns correctly. For instance, if you want to classify dogs vs. cats, you'll need to create two folders. One containing dog images, and another containing cat images.\"), React.createElement(FileDropper, {\n    setFilesAction: setFiles,\n    firebase: props.firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: styles.buildButton,\n    variant: \"contained\",\n    disabled: true,\n    onClick: build_classifer(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Build Predictor\")));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/imageClassiferBuilder.js"],"names":["React","useState","Typography","FileDropper","Button","styles","buildButton","marginTop","ImageClassiferBuilder","props","files","setFiles","upload_dataset","xhr","XMLHttpRequest","open","setRequestHeader","build_classifer","console","log","firebase","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AADF,CAAf;AAMA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAqC;AAEhD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASW,cAAT,GAAyB;AACrB,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,8CAAjB;AACAF,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC,EAHqB,CAKrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAGD,WAASC,eAAT,GAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gQAFJ,EAGI,oBAAC,WAAD;AAAa,IAAA,cAAc,EAAER,QAA7B;AAAuC,IAAA,QAAQ,EAAEF,KAAK,CAACW,QAAvD;AAAiE,IAAA,IAAI,EAAEX,KAAK,CAACY,IAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEhB,MAAM,CAACC,WAAtB;AAAmC,IAAA,OAAO,EAAC,WAA3C;AAAuD,IAAA,QAAQ,EAAE,IAAjE;AAAuE,IAAA,OAAO,EAAEW,eAAe,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAJJ,CADJ;AAWH","sourcesContent":["import React, { useState } from 'react'\nimport { Typography } from '@material-ui/core'\nimport FileDropper from './fileDropper'\nimport Button from '@material-ui/core/Button'\n\n\nconst styles = {\n    buildButton: {\n        marginTop: '20px'\n    }\n}\n\nexport default function ImageClassiferBuilder(props){\n\n    const [files, setFiles] = useState({})\n\n    function upload_dataset(){\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST', 'https://astrumdashboard.appspot.com/datasets')\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n        // var post_body = {\n        //     \"type\": \"image_classifier\"\n        // }\n\n        // for (file in files){\n        //     post_body[\"child_datasets\"][file] = files[file]\n        // }\n        // xhr.send(JSON.stringify({\n        //     post_body\n        // }))\n        // xhr.addEventListener('load', () => {\n        //     if (xhr.status === 200) {\n        //         var headers = JSON.parse(xhr.response).features\n        //         setCSVHeaders(headers)\n        //         setFeatures(headers)\n        //     }\n        // })\n    }\n\n\n    function build_classifer(){\n        console.log(\"BNutton pressed\")\n    }\n\n    return (\n        <div>\n            <Typography>First we'll need to upload data. In the box below, drop folders containing your image classes</Typography>\n            <Typography>You'll need to organize your images into folders to make sure that the algorithm learns correctly. For instance, if you want to classify dogs vs. cats, you'll need to create two folders. One containing dog images, and another containing cat images.</Typography>\n            <FileDropper setFilesAction={setFiles} firebase={props.firebase} user={props.user}></FileDropper>\n            <div>\n                <Button style={styles.buildButton} variant='contained' disabled={true} onClick={build_classifer()}>Build Predictor</Button>\n            \n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}