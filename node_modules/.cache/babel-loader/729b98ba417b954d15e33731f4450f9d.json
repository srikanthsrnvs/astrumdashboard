{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/fileDropper.js\";\nimport React, { useMemo, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  marginTop: 20\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nexport default function FileDropper(props) {\n  const firebase = props.firebase;\n  const user = props.user;\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n      };\n\n      reader.readAsArrayBuffer(file);\n      firebase.upload_file(file, user);\n    });\n  }, []);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: '.zip',\n    onDrop\n  });\n  const files = acceptedFiles.map(file => React.createElement(\"li\", {\n    key: file.path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    variant: \"outlined\",\n    style: chipStyle,\n    key: file.name,\n    label: file.name.split('.').slice(0, -1).join('.'),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject]);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps({\n    style\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Drop your .zip file here or click to select a file to upload\")), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, files)));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/fileDropper.js"],"names":["React","useMemo","useCallback","useDropzone","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","marginTop","activeStyle","acceptStyle","rejectStyle","FileDropper","props","firebase","user","onDrop","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","upload_file","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept","files","map","path","chipStyle","name","split","slice","join","style"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,WAAxB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,CADQ;AAEdC,EAAAA,OAAO,EAAE,MAFK;AAGdC,EAAAA,aAAa,EAAE,QAHD;AAIdC,EAAAA,UAAU,EAAE,QAJE;AAKdC,EAAAA,OAAO,EAAE,MALK;AAMdC,EAAAA,WAAW,EAAE,CANC;AAOdC,EAAAA,YAAY,EAAE,CAPA;AAQdC,EAAAA,WAAW,EAAE,SARC;AASdC,EAAAA,WAAW,EAAE,QATC;AAUdC,EAAAA,eAAe,EAAE,SAVH;AAWdC,EAAAA,KAAK,EAAE,SAXO;AAYdC,EAAAA,OAAO,EAAE,MAZK;AAadC,EAAAA,UAAU,EAAE,yBAbE;AAcdC,EAAAA,SAAS,EAAE;AAdG,CAAlB;AAiBA,MAAMC,WAAW,GAAG;AAChBP,EAAAA,WAAW,EAAE;AADG,CAApB;AAIA,MAAMQ,WAAW,GAAG;AAChBR,EAAAA,WAAW,EAAE;AADG,CAApB;AAIA,MAAMS,WAAW,GAAG;AAChBT,EAAAA,WAAW,EAAE;AADG,CAApB;AAIA,eAAe,SAASU,WAAT,CAAqBC,KAArB,EAA4B;AAEvC,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;AAEA,QAAMC,MAAM,GAAGxB,WAAW,CAAEyB,aAAD,IAAmB;AAC1CA,IAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAD,IAAU;AAC5B,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AAClB;AACA,cAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACH,OAJD;;AAKAP,MAAAA,MAAM,CAACS,iBAAP,CAAyBV,IAAzB;AACAL,MAAAA,QAAQ,CAACgB,WAAT,CAAqBX,IAArB,EAA2BJ,IAA3B;AACH,KAXD;AAaH,GAdyB,EAcvB,EAduB,CAA1B;AAgBA,QAAM;AACFE,IAAAA,aADE;AAEFc,IAAAA,YAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,YALE;AAMFC,IAAAA;AANE,MAOF1C,WAAW,CAAC;AAAC2C,IAAAA,MAAM,EAAE,MAAT;AAAiBpB,IAAAA;AAAjB,GAAD,CAPf;AASA,QAAMqB,KAAK,GAAGpB,aAAa,CAACqB,GAAd,CAAkBnB,IAAI,IAChC;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACoB,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,UAAd;AAAyB,IAAA,KAAK,EAAEC,SAAhC;AAA2C,IAAA,GAAG,EAAErB,IAAI,CAACsB,IAArD;AAA2D,IAAA,KAAK,EAAEtB,IAAI,CAACsB,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,EAAkCC,IAAlC,CAAuC,GAAvC,CAAlE;AAA+G,IAAA,KAAK,EAAC,SAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADU,CAAd;AAMA,QAAMC,KAAK,GAAGtD,OAAO,CAAC,OAAO,EACzB,GAAGG,SADsB;AAEzB,QAAIuC,YAAY,GAAGxB,WAAH,GAAiB,EAAjC,CAFyB;AAGzB,QAAIyB,YAAY,GAAGxB,WAAH,GAAiB,EAAjC,CAHyB;AAIzB,QAAIyB,YAAY,GAAGxB,WAAH,GAAiB,EAAjC;AAJyB,GAAP,CAAD,EAKjB,CACAsB,YADA,EAEAE,YAFA,CALiB,CAArB;AAUA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6CAASJ,YAAY,CAAC;AAAEc,IAAAA;AAAF,GAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,+CAAWb,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,KAAL,CADJ,CALJ,CADJ;AAWH","sourcesContent":["import React, {useMemo, useCallback} from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    marginTop: 20\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744'\n};\n\nexport default function FileDropper(props) {\n\n    const firebase = props.firebase;\n    const user = props.user;\n\n    const onDrop = useCallback((acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n            const reader = new FileReader()\n            reader.onabort = () => console.log('file reading was aborted')\n            reader.onerror = () => console.log('file reading has failed')\n            reader.onload = () => {\n                // Do whatever you want with the file contents\n                const binaryStr = reader.result\n                console.log(binaryStr)\n            }\n            reader.readAsArrayBuffer(file)\n            firebase.upload_file(file, user)\n        })\n\n    }, [])\n\n    const {\n        acceptedFiles,\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({accept: '.zip', onDrop});\n\n    const files = acceptedFiles.map(file => (\n        <li key={file.path}>\n            <Chip variant='outlined' style={chipStyle} key={file.name} label={file.name.split('.').slice(0, -1).join('.')} color='primary'></Chip>\n        </li>\n    ));\n\n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n    }), [\n        isDragActive,\n        isDragReject\n    ]);\n\n    return (\n        <div className=\"container\">\n            <div {...getRootProps({ style })}>\n                <input {...getInputProps()} />\n                <p>Drop your .zip file here or click to select a file to upload</p>\n            </div>\n            <aside>\n                <ul>{files}</ul>\n            </aside>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}