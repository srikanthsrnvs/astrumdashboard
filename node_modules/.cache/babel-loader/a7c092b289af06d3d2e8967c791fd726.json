{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/featureChips.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogContentText } from '@material-ui/core';\nimport PredictorDialog from './predictorDialog';\nconst chipStyle = {\n  marginTop: '10px',\n  marginRight: '5px'\n};\nconst sectionTitle = {\n  marginTop: '40px'\n};\nexport default class FeatureChips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      features: props.features,\n      showPredictorDialog: false\n    };\n    this.deleteFeature = this.deleteFeature.bind(this);\n  }\n\n  deleteFeature(feature) {\n    var array = [...this.state.features]; // make a separate copy of the array\n\n    for (var i = 0; i < this.state.features.length; i++) {\n      if (this.state.features[i] === feature) {\n        array.splice(i, 1);\n        this.setState({\n          features: array\n        });\n        this.props.onSelection(array);\n      }\n    }\n  }\n\n  render() {\n    var chips = [];\n\n    for (var i = 0; i < this.state.features.length; i++) {\n      chips.push(React.createElement(Chip, {\n        variant: \"outlined\",\n        style: chipStyle,\n        key: i,\n        label: this.state.features[i],\n        color: \"primary\",\n        onDelete: this.deleteFeature.bind(this, this.state.features[i]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(PredictorDialog, {\n      open: this.state.showPredictorDialog,\n      onClose: this.setState({\n        \"showPredictorDialog\": false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      style: sectionTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Selected features\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"These are a list of predictors for your dataset.\"), React.createElement(\"button\", {\n      onClick: this.setState({\n        showPredictorDialog: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"What's a predictor?\"), chips);\n  }\n\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/featureChips.js"],"names":["React","Component","Chip","DialogTitle","Dialog","DialogContentText","PredictorDialog","chipStyle","marginTop","marginRight","sectionTitle","FeatureChips","constructor","props","state","features","showPredictorDialog","deleteFeature","bind","feature","array","i","length","splice","setState","onSelection","render","chips","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,MADG;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAlB;AAKA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,SAAS,EAAE;AADM,CAArB;AAKA,eAAe,MAAMG,YAAN,SAA2BV,SAA3B,CAAoC;AAE/CW,EAAAA,WAAW,CAACC,KAAD,EAAO;AAEd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QADP;AAETC,MAAAA,mBAAmB,EAAE;AAFZ,KAAb;AAIA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,CAACE,OAAD,EAAS;AAClB,QAAIC,KAAK,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,QAAf,CAAZ,CADkB,CACoB;;AACtC,SAAK,IAAIM,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC5C,UAAI,KAAKP,KAAL,CAAWC,QAAX,CAAoBM,CAApB,MAA2BF,OAA/B,EAAuC;AACnCC,QAAAA,KAAK,CAACG,MAAN,CAAaF,CAAb,EAAgB,CAAhB;AACA,aAAKG,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAEK;AAAX,SAAd;AACA,aAAKP,KAAL,CAAWY,WAAX,CAAuBL,KAAvB;AACH;AACJ;AACJ;;AAEDM,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIN,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC5CM,MAAAA,KAAK,CAACC,IAAN,CAAW,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAyB,QAAA,KAAK,EAAErB,SAAhC;AAA2C,QAAA,GAAG,EAAEc,CAAhD;AAAmD,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBM,CAApB,CAA1D;AAAkF,QAAA,KAAK,EAAC,SAAxF;AAAkG,QAAA,QAAQ,EAAE,KAAKJ,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8B,KAAKJ,KAAL,CAAWC,QAAX,CAAoBM,CAApB,CAA9B,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWE,mBAAlC;AAAuD,MAAA,OAAO,EAAE,KAAKQ,QAAL,CAAc;AAAC,+BAAuB;AAAxB,OAAd,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAI,MAAA,KAAK,EAAEd,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKc,QAAL,CAAc;AAACR,QAAAA,mBAAmB,EAAC;AAArB,OAAd,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKKW,KALL,CADJ;AASH;;AArC8C","sourcesContent":["import React, { Component } from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogContentText } from '@material-ui/core';\nimport PredictorDialog from './predictorDialog'\n\nconst chipStyle = {\n    marginTop: '10px',\n    marginRight: '5px'\n}\n\nconst sectionTitle = {\n    marginTop: '40px'\n}\n\n\nexport default class FeatureChips extends Component{\n\n    constructor(props){\n        \n        super(props);\n        this.state = {\n            features: props.features,\n            showPredictorDialog: false\n        }\n        this.deleteFeature = this.deleteFeature.bind(this); \n    }\n\n    deleteFeature(feature){\n        var array = [...this.state.features]; // make a separate copy of the array\n        for (var i=0; i<this.state.features.length; i++){\n            if (this.state.features[i] === feature){\n                array.splice(i, 1)\n                this.setState({features: array})\n                this.props.onSelection(array)\n            }\n        }\n    }\n\n    render() {\n        var chips = []\n        for (var i=0; i<this.state.features.length; i++){\n            chips.push(<Chip variant='outlined' style={chipStyle} key={i} label={this.state.features[i]} color='primary' onDelete={this.deleteFeature.bind(this, this.state.features[i])}></Chip>)\n        }\n        return(\n            <div>\n                <PredictorDialog open={this.state.showPredictorDialog} onClose={this.setState({\"showPredictorDialog\": false})}></PredictorDialog>\n                <h3 style={sectionTitle}>Selected features</h3>\n                <span>These are a list of predictors for your dataset.</span>\n                <button onClick={this.setState({showPredictorDialog:true})}>What's a predictor?</button>\n                {chips}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}