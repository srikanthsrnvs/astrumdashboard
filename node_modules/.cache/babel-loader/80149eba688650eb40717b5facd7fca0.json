{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/src/components/projectBuilder.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TaskTypePicker from './taskTypePicker';\nimport ImageClassiferBuilder from './imageClassiferBuilder';\nimport { Switch, Route } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router';\nimport ObjectDetectionBuilder from './objectDetectionBuilder';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  },\n  chip: {\n    marginTop: '10px'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    paddingTop: 75,\n    paddingLeft: 100\n  }\n}));\nexport default function ProjectBuilder(props) {\n  const classes = styles();\n  const [selectedType, setSelectedType] = useState(0);\n  const user = props.user;\n  const firebase = props.firebase;\n  const match = useRouteMatch();\n  return React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TaskTypePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/image_classification`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ImageClassiferBuilder, {\n    firebase: firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/object_detection`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ObjectDetectionBuilder, {\n    firebase: firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/object_localization`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ImageClassiferBuilder, {\n    firebase: firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/structured_classification`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(ImageClassiferBuilder, {\n    firebase: firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/structured_prediction`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ImageClassiferBuilder, {\n    firebase: firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: `${match.path}/custom`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ImageClassiferBuilder, {\n    firebase: firebase,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/src/components/projectBuilder.js"],"names":["React","useState","makeStyles","TaskTypePicker","ImageClassiferBuilder","Switch","Route","useRouteMatch","ObjectDetectionBuilder","styles","theme","dropboxButton","marginTop","chip","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","content","paddingTop","paddingLeft","ProjectBuilder","props","classes","selectedType","setSelectedType","user","firebase","match","path"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TaskTypePicker from './taskTypePicker'\nimport ImageClassiferBuilder from './imageClassiferBuilder';\nimport { Switch, Route } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router';\nimport ObjectDetectionBuilder from './objectDetectionBuilder'\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton: {\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        paddingTop: 75,\n        paddingLeft: 100,\n    }\n}));\n\nexport default function ProjectBuilder(props) {\n\n    const classes = styles();\n    const [selectedType, setSelectedType] = useState(0)\n    const user = props.user\n    const firebase = props.firebase\n    const match = useRouteMatch()\n\n    return (\n        <div className={classes.content}>\n            <Switch>\n                <Route exact path={`${match.path}`}>\n                    <TaskTypePicker />\n                </Route>\n                <Route path={`${match.path}/image_classification`}>\n                    <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n                </Route>\n                <Route path={`${match.path}/object_detection`}>\n                    <ObjectDetectionBuilder firebase={firebase} user={props.user}/>\n                </Route>\n                <Route path={`${match.path}/object_localization`}>\n                    <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n                </Route>\n                <Route path={`${match.path}/structured_classification`}>\n                    <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n                </Route>\n                <Route path={`${match.path}/structured_prediction`}>\n                    <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n                </Route>\n                <Route path={`${match.path}/custom`}>\n                    <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n                </Route>\n            </Switch>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}