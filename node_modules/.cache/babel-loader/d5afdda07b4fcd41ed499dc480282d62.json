{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAI6jdiSr92SVzXL0AwGKgdl9vf1n6O3xE\",\n  authDomain: \"astrumdashboard.firebaseapp.com\",\n  databaseURL: \"https://astrumdashboard.firebaseio.com\",\n  projectId: \"astrumdashboard\",\n  storageBucket: \"astrumdashboard.appspot.com\",\n  messagingSenderId: \"454472899112\",\n  appId: \"1:454472899112:web:4682681794e9e7de5c331d\",\n  measurementId: \"G-KS2TFQMTZJ\"\n};\n\nclass Firebase {\n  constructor() {\n    this.createAccount = (email, password) => {\n      return this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    this.signIn = (email, password) => {\n      return this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    this.signOut = () => {\n      return this.auth.signOut();\n    };\n\n    this.setListenerOnUserData = user => {\n      return this.db.ref(`/`);\n    };\n\n    this.get_user_data = (user, callback) => {\n      this.db.ref(`/users/${user.uid}`).on('value', function (snapshot) {\n        console.log(\"Retrieved user information\");\n        callback(snapshot.val());\n      });\n    };\n\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/Firebase/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","createAccount","email","password","auth","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","setListenerOnUserData","user","db","ref","get_user_data","callback","uid","on","snapshot","console","log","val","initializeApp","database"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,iCAFO;AAGnBC,EAAAA,WAAW,EAAE,wCAHM;AAInBC,EAAAA,SAAS,EAAE,iBAJQ;AAKnBC,EAAAA,aAAa,EAAE,6BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;;AAWA,MAAMC,QAAN,CAAc;AAEVC,EAAAA,WAAW,GAAE;AAAA,SAMbC,aANa,GAMG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjC,aAAO,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAAP;AACH,KARY;;AAAA,SAUbG,MAVa,GAUJ,CAACJ,KAAD,EAAQC,QAAR,KAAqB;AAC1B,aAAO,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAAP;AACH,KAZY;;AAAA,SAcbK,OAda,GAcH,MAAM;AACZ,aAAO,KAAKJ,IAAL,CAAUI,OAAV,EAAP;AACH,KAhBY;;AAAA,SAkBbC,qBAlBa,GAkBYC,IAAD,IAAU;AAC9B,aAAO,KAAKC,EAAL,CAAQC,GAAR,CAAa,GAAb,CAAP;AACH,KApBY;;AAAA,SAsBbC,aAtBa,GAsBG,CAACH,IAAD,EAAOI,QAAP,KAAoB;AAChC,WAAKH,EAAL,CAAQC,GAAR,CAAa,UAASF,IAAI,CAACK,GAAI,EAA/B,EAAkCC,EAAlC,CAAqC,OAArC,EAA8C,UAASC,QAAT,EAAkB;AAC5DC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAL,QAAAA,QAAQ,CAACG,QAAQ,CAACG,GAAT,EAAD,CAAR;AACH,OAHD;AAIH,KA3BY;;AACT/B,IAAAA,GAAG,CAACgC,aAAJ,CAAkB/B,cAAlB;AACA,SAAKc,IAAL,GAAYf,GAAG,CAACe,IAAJ,EAAZ;AACA,SAAKO,EAAL,GAAUtB,GAAG,CAACiC,QAAJ,EAAV;AACH;;AANS;;AAgCd,eAAevB,QAAf","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAI6jdiSr92SVzXL0AwGKgdl9vf1n6O3xE\",\n    authDomain: \"astrumdashboard.firebaseapp.com\",\n    databaseURL: \"https://astrumdashboard.firebaseio.com\",\n    projectId: \"astrumdashboard\",\n    storageBucket: \"astrumdashboard.appspot.com\",\n    messagingSenderId: \"454472899112\",\n    appId: \"1:454472899112:web:4682681794e9e7de5c331d\",\n    measurementId: \"G-KS2TFQMTZJ\"\n};\n\nclass Firebase{\n\n    constructor(){\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth()\n        this.db = app.database()\n    }\n\n    createAccount = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    signIn = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    }\n\n    signOut = () => {\n        return this.auth.signOut()\n    }\n\n    setListenerOnUserData = (user) => {\n        return this.db.ref(`/`)\n    }\n\n    get_user_data = (user, callback) => {\n        this.db.ref(`/users/${user.uid}`).on('value', function(snapshot){\n            console.log(\"Retrieved user information\")\n            callback(snapshot.val())\n        })\n    }\n}\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}