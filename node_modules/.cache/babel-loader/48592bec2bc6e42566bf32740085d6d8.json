{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/parsingContainer.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport BuildIcon from '@material-ui/icons/Build';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nfunction Alert(props) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n}\n\nconst styles = theme => ({\n  sectionHeader: {\n    marginTop: '40px'\n  },\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n});\n\nclass ParsingContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target: props.target,\n      features: props.features,\n      error: \"\",\n      open: false\n    };\n    this.buildNetwork = this.buildNetwork.bind(this);\n    this.validateFeatures = this.validateFeatures.bind(this);\n    this.validateTarget = this.validateTarget.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      open: false,\n      error: \"\"\n    });\n  }\n\n  validateTarget() {\n    if (this.state.target !== '') {\n      return {\n        success: true,\n        error: ''\n      };\n    } else {\n      return {\n        success: false,\n        error: 'There must be a target selected.'\n      };\n    }\n  }\n\n  validateFeatures() {\n    if (this.state.features.length >= 1) {\n      if (this.state.features.includes(this.state.target)) {\n        return {\n          success: false,\n          error: \"Prediction targets cannot be a feature.\"\n        };\n      } else {\n        return {\n          success: true,\n          error: \"\"\n        };\n      }\n    } else {\n      return {\n        success: false,\n        error: \"There must be at least one feature to predict the target from.\"\n      };\n    }\n  }\n\n  buildNetwork() {\n    var featuresValidated = this.validateFeatures();\n    var targetValidated = this.validateTarget();\n\n    if (!featuresValidated.success) {\n      this.setState({\n        open: true,\n        error: featuresValidated.error\n      });\n    } else if (!targetValidated.success) {\n      this.setState({\n        error: targetValidated.error,\n        open: true\n      });\n    } else {\n      this.setState({\n        open: false,\n        error: \"\"\n      });\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', 'http://127.0.0.1:8080/datasets/params');\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhr.send(JSON.stringify({\n        \"features\": this.state.features,\n        \"target\": this.state.target\n      }));\n      xhr.addEventListener('load', () => {\n        if (xhr.status === 200) {\n          var headers = JSON.parse(xhr.response).headers; //TODO\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: classes.sectionHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Train\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Button, {\n      startIcon: React.createElement(BuildIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }),\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      onClick: this.buildNetwork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Build neural network\"), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      autoHideDuration: 6000,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.error)));\n  }\n\n}\n\nexport default withStyles(styles)(ParsingContainer);","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/dashboard/src/components/parsingContainer.js"],"names":["React","Component","Button","withStyles","BuildIcon","MuiAlert","Snackbar","Alert","props","styles","theme","sectionHeader","marginTop","root","width","spacing","ParsingContainer","constructor","state","target","features","error","open","buildNetwork","bind","validateFeatures","validateTarget","handleClose","setState","success","length","includes","featuresValidated","targetValidated","xhr","XMLHttpRequest","setRequestHeader","send","JSON","stringify","addEventListener","status","headers","parse","response","render","classes","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Button from '@material-ui/core/Button'\nimport {withStyles} from '@material-ui/core/styles'\nimport BuildIcon from '@material-ui/icons/Build'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport Snackbar from '@material-ui/core/Snackbar'\n\n\nfunction Alert(props){\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst styles = (theme) => ({\n    sectionHeader: {\n        marginTop: '40px'\n    },\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    }\n});\n\n\nclass ParsingContainer extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            target: props.target,\n            features: props.features,\n            error: \"\",\n            open: false\n        }\n        this.buildNetwork = this.buildNetwork.bind(this)\n        this.validateFeatures = this.validateFeatures.bind(this)\n        this.validateTarget = this.validateTarget.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    handleClose(){\n        this.setState({open:false, error: \"\"})\n    }\n\n    validateTarget(){\n        if(this.state.target !== ''){\n            return {success: true, error: ''}\n        }else{\n            return {success: false, error: 'There must be a target selected.'}\n        }\n    }\n\n    validateFeatures(){\n        if(this.state.features.length >= 1){\n            if(this.state.features.includes(this.state.target)){\n                return {success: false, error: \"Prediction targets cannot be a feature.\"}\n            }else{\n                return {success: true, error: \"\"}\n            }\n        }else{\n            return {success: false, error: \"There must be at least one feature to predict the target from.\"}\n        }\n    }\n\n    buildNetwork(){\n        var featuresValidated = this.validateFeatures()\n        var targetValidated = this.validateTarget()\n\n        if(!featuresValidated.success){\n            this.setState({open: true, error: featuresValidated.error})\n        }else if (!targetValidated.success){\n            this.setState({error: targetValidated.error, open: true})\n        }else{\n            this.setState({open: false, error: \"\"})\n            var xhr = new XMLHttpRequest()\n            xhr.open('POST', 'http://127.0.0.1:8080/datasets/params')\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.send(JSON.stringify({\n                \"features\": this.state.features,\n                \"target\": this.state.target \n            }))\n            xhr.addEventListener('load', () => {\n                if (xhr.status === 200){\n                    var headers = JSON.parse(xhr.response).headers\n                    //TODO\n                }\n            })\n        }\n    }\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <div className={classes.root}>\n                <h3 className={classes.sectionHeader}>Train</h3>\n                <br></br>\n                <Button startIcon={<BuildIcon/>} variant='contained' color='primary' disableElevation onClick={this.buildNetwork}>Build neural network</Button>\n                <Snackbar anchorOrigin={{vertical: 'bottom', horizontal:'right'}} autoHideDuration={6000} open={this.state.open} onClose={this.handleClose}>\n                    <Alert severity='error'>{this.state.error}</Alert>\n                </Snackbar>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(ParsingContainer)"]},"metadata":{},"sourceType":"module"}