{"ast":null,"code":"var _jsxFileName = \"/home/srikanth/Documents/astrum_dashboard/src/components/projectBuilder.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DropboxIcon from './Icons/dropboxIcon';\nimport Chip from '@material-ui/core/Chip';\nimport FeatureChips from './featureChips';\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dropzone from 'react-dropzone';\nimport FileDropper from './fileDropper';\nimport TaskTypePicker from './taskTypePicker';\nimport ImageClassiferBuilder from './imageClassiferBuilder';\nconst styles = makeStyles(theme => ({\n  dropboxButton: {\n    marginTop: '20px'\n  },\n  chip: {\n    marginTop: '10px'\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  content: {\n    spacing: theme.spacing(7),\n    flexGrow: 1\n  }\n}));\nexport default function ProjectBuilder(props) {\n  const classes = styles();\n  const [filename, setFilename] = useState(\"No file selected\");\n  const [filelink, setFilelink] = useState(\"\");\n  const [csvHeaders, setCSVHeaders] = useState([]);\n  const [features, setFeatures] = useState([]);\n  const [target, setTarget] = useState(\"\");\n  const [selectedType, setSelectedType] = useState(0);\n  const user = props.user;\n  const firebase = props.firebase;\n\n  function deleteSelectedFile() {\n    setFilename(\"No file selected\");\n    setFilelink(\"\");\n    setCSVHeaders([]);\n    setFeatures([]);\n    setTarget(\"\");\n  }\n\n  function getHeaders(link, size) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://astrumdashboard.appspot.com/datasets');\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(JSON.stringify({\n      \"link\": link,\n      \"size\": size,\n      \"uid\": user.uid\n    }));\n    xhr.addEventListener('load', () => {\n      if (xhr.status === 200) {\n        var headers = JSON.parse(xhr.response).features;\n        setCSVHeaders(headers);\n        setFeatures(headers);\n      }\n    });\n  }\n\n  function targetSelected(target) {\n    setTarget(target);\n    console.log(target);\n  }\n\n  function featuresSelected(features) {\n    setFeatures(features);\n    console.log(features);\n  }\n\n  function buildPressed(response) {\n    console.log(response);\n  }\n\n  const ShowFeatures = function () {\n    if (features.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(FeatureChips, {\n        features: features,\n        onSelection: featuresSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(TargetSelector, {\n        target: target,\n        features: csvHeaders,\n        onSelection: targetSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(ParsingContainer, {\n        target: target,\n        features: features,\n        onBuild: buildPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  const ShowBuilder = function () {\n    if (selectedType == 0) {\n      return React.createElement(TaskTypePicker, {\n        onClick: setSelectedType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    } else if (selectedType == 1) {\n      return React.createElement(ImageClassiferBuilder, {\n        firebase: firebase,\n        user: props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    } else if (selectedType == 2) {\n      return null;\n    } else if (selectedType == 3) {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Let's get started\"), React.createElement(ShowBuilder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/srikanth/Documents/astrum_dashboard/src/components/projectBuilder.js"],"names":["React","useState","makeStyles","Button","DropboxIcon","Chip","FeatureChips","TargetSelector","ParsingContainer","CircularProgress","Dropzone","FileDropper","TaskTypePicker","ImageClassiferBuilder","styles","theme","dropboxButton","marginTop","chip","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","content","flexGrow","ProjectBuilder","props","classes","filename","setFilename","filelink","setFilelink","csvHeaders","setCSVHeaders","features","setFeatures","target","setTarget","selectedType","setSelectedType","user","firebase","deleteSelectedFile","getHeaders","link","size","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","uid","addEventListener","status","headers","parse","response","targetSelected","console","log","featuresSelected","buildPressed","ShowFeatures","length","ShowBuilder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DropboxIcon from './Icons/dropboxIcon'\nimport Chip from '@material-ui/core/Chip'\nimport FeatureChips from './featureChips'\nimport TargetSelector from './targetSelector';\nimport ParsingContainer from './parsingContainer'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dropzone from 'react-dropzone'\nimport FileDropper from './fileDropper'\nimport TaskTypePicker from './taskTypePicker'\nimport ImageClassiferBuilder from './imageClassiferBuilder';\n\n\nconst styles = makeStyles(theme => ({\n    dropboxButton: {\n        marginTop: '20px'\n    },\n    chip: {\n        marginTop: '10px'\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        spacing: theme.spacing(7),\n        flexGrow: 1,\n    }\n}));\n\nexport default function ProjectBuilder(props) {\n\n    const classes = styles();\n    const [filename, setFilename] = useState(\"No file selected\");\n    const [filelink, setFilelink] = useState(\"\");\n    const [csvHeaders, setCSVHeaders] = useState([])\n    const [features, setFeatures] = useState([])\n    const [target, setTarget] = useState(\"\")\n    const [selectedType, setSelectedType] = useState(0)\n    const user = props.user\n    const firebase = props.firebase\n\n    function deleteSelectedFile() {\n        setFilename(\"No file selected\")\n        setFilelink(\"\")\n        setCSVHeaders([])\n        setFeatures([])\n        setTarget(\"\")\n    }\n\n    function getHeaders(link, size) {\n        var xhr = new XMLHttpRequest()\n        xhr.open('POST', 'https://astrumdashboard.appspot.com/datasets')\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(JSON.stringify({ \"link\": link, \"size\":  size, \"uid\": user.uid}))\n        xhr.addEventListener('load', () => {\n            if (xhr.status === 200) {\n                var headers = JSON.parse(xhr.response).features\n                setCSVHeaders(headers)\n                setFeatures(headers)\n            }\n        })\n    }\n\n    function targetSelected(target) {\n        setTarget(target)\n        console.log(target)\n    }\n\n    function featuresSelected(features) {\n        setFeatures(features)\n        console.log(features)\n    }\n\n    function buildPressed(response) {\n        console.log(response)\n    }\n\n    const ShowFeatures = (function () {\n        if (features.length > 0) {\n            return (\n                <div>\n                    <FeatureChips features={features} onSelection={featuresSelected} />\n                    <br></br>\n                    <TargetSelector target={target} features={csvHeaders} onSelection={targetSelected} />\n                    <br></br>\n                    <ParsingContainer target={target} features={features} onBuild={buildPressed}></ParsingContainer>\n                </div>\n            )\n        } else {\n            return (\n                null\n            )\n        }\n    })\n\n    const ShowBuilder = (function() {\n        if (selectedType == 0){\n            return(\n                <TaskTypePicker onClick={setSelectedType}/>\n            )\n        }else if (selectedType == 1){\n            return(\n                <ImageClassiferBuilder firebase={firebase} user={props.user}/>\n            )\n        }else if (selectedType == 2){\n            return(\n                null\n            )\n        }else if (selectedType == 3){\n            return(\n                null\n            )\n        }\n    })\n\n    return (\n        <div className={classes.content}>\n            <h1>Let's get started</h1>\n            <ShowBuilder />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}